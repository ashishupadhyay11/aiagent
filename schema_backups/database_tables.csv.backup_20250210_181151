Table Name,context_for_ai
Dim_Date,"""A standard date dimension table storing calendar dates and their attributes (year, month, day, etc.) for time-based analysis. This table enables consistent date filtering and time-based aggregations across the data warehouse."""
XParams,"""This table stores extended parameters and configuration settings used across the system. XParams typically contains key-value pairs for application-level settings and customizable parameters."""
ZZZ_fix_bb_20250124,"""This appears to be a temporary fix or patch table created for January 24, 2025, likely for handling bug fixes or data corrections (indicated by 'fix' in the name). Based on the naming convention with 'ZZZ' prefix, it's probably a temporary table that will be deprecated after its immediate use."""
ZZZ_issue_juice_gift,"""This table appears to track juice-related gift or promotional items issued to customers or recipients. Based on the naming convention (ZZZ_ prefix), it's likely a temporary or auxiliary table used for special promotions or gift tracking purposes."""
ZZZ_issue_juice_gift_to_contact,"""This table tracks juice-related gifts or rewards issued to contacts in the system. Based on the name, it appears to be a temporary or test table (indicated by 'ZZZ_' prefix) that records when juice products are given as gifts to specific contacts."""
ZZZ_reactivated_from_waitlist,"""This table tracks customers who were previously on a waitlist and have been reactivated in the system. Based on the table name prefix 'ZZZ_', this appears to be a temporary or administrative table used for monitoring waitlist reactivation events."""
ZZZ_remaining_buffer,"""This table appears to be a temporary or utility table used as a buffer storage area, likely indicated by the 'ZZZ_' prefix. It likely stores overflow or temporary data that needs to be processed or held temporarily."""
ZZZ_tour,"""This table appears to be a temporary or test table (indicated by 'ZZZ_' prefix) storing tour-related information. Since no relationships are found, it likely serves as an isolated or staging table for tour data."""
ab_absence_details,"""This table stores detailed information about employee absences, including dates, reasons, and related documentation. It appears to be a standalone table tracking absence-related data for HR and attendance management purposes."""
ab_absence_documents,"""This table stores documents and attachments related to employee absences or leave requests. It likely contains file references, upload dates, and document types for absence-related paperwork such as medical certificates or leave forms."""
ab_absence_requests,"""This table tracks employee absence requests and their associated details such as dates, types, and approval status. It appears to be a standalone table for managing time-off and leave requests within an organization."""
ab_absence_types,"""This table stores different types of absences or leave categories that can be taken by employees. It serves as a reference table for classifying various absence reasons like sick leave, vacation, personal time off, etc."""
ab_hour_types,"""This table stores different types of hourly classifications or categories used in attendance or time tracking. It likely serves as a reference table for categorizing different types of work hours or time-off hours."""
action_log,"""This table records system actions and events for auditing and tracking purposes. It logs various activities, timestamps, and relevant details to maintain a historical record of system operations."""
activate_newsletter_pop_up,"""This table manages settings and configurations for newsletter subscription pop-up displays on the website. It likely stores parameters such as timing, frequency, and display conditions for when to show newsletter subscription prompts to visitors."""
active_record_logs,"""This table maintains a log of database operations and changes performed through ActiveRecord in a Rails application. It tracks modifications to records, including the type of operation, timestamp, and relevant details for debugging and audit purposes."""
additional_lots_found,"""This table tracks additional lot numbers discovered during spot check tasks that weren't originally listed in the inventory. It connects to the task_type_spot_check table to associate these newly found lots with their corresponding spot check inspection records."""
ai_alternatives,"""This table stores alternative ingredient options for AI-generated recipes. It connects to the ai_recipes table through ai_recipe_id, allowing each recipe to have multiple possible ingredient substitutions or variations."""
ai_ingredients,"""This table stores ingredient details used in AI-generated recipes, including names, quantities, and measurements. It maintains a relationship with the ai_recipes table through the ai_recipe_id foreign key, allowing each ingredient to be associated with specific recipes."""
ai_recipes,"""This table stores core recipe information created or managed by AI systems, including recipe names, instructions, and preparation details. It serves as the central recipe repository, connecting to alternative recipe versions in ai_alternatives and individual ingredient listings in ai_ingredients through the ai_recipe_id relationship."""
annie_exemptions,"""This table stores exemption records for products in the Annie system, tracking special cases or exclusions from standard rules. It connects to the products table through the product_id field, allowing each exemption to be associated with a specific product."""
api_log,"""This table records API request and response data for system monitoring and debugging purposes. It tracks API interactions including timestamps, endpoints, request/response payloads, and status codes."""
app_version,"""This table tracks application version information, storing details about different releases and updates of the software. It maintains version numbers, release dates, and potentially changelog information for tracking software iterations."""
application_error_logs,"""This table records application errors and exceptions that occur during system operation, including timestamps, error types, and stack traces. It serves as a centralized logging system for debugging and monitoring application health."""
asset,"""This table stores information about digital or physical assets available in the system. It serves as a master record for assets that can be added to shopping carts through the cart_asset_associations table."""
asset_activity,"""This table tracks activities and events related to assets in the system, recording timestamps and action types for audit and monitoring purposes. It likely logs actions such as asset creation, modification, deletion, or status changes."""
asset_location,"""This table tracks the physical or virtual locations of assets within an organization. It stores location details such as building, floor, room, or coordinates where assets are currently situated."""
asset_order,"""This table tracks orders and transactions related to digital or physical assets in the system. It likely stores essential order details such as order dates, amounts, and status information."""
asset_transactions,"""This table tracks financial transactions and activities related to various assets, recording details such as transaction amounts, dates, and types. It serves as a ledger for monitoring asset-related operations and movements."""
asset_type,"""This table stores categories or classifications of different types of assets within the system. It serves as a lookup or reference table to standardize asset categorization across the application."""
authassignment,"""This table manages authorization assignments, storing the mapping between users/roles and their assigned permissions or access rights. It likely serves as a core component of the application's security and access control system."""
authitem,"""This table stores authorization items (such as roles, permissions, or tasks) in a hierarchical access control system. It connects to authitemchild table in two ways: as a parent item and as a child item, enabling the creation of permission hierarchies and inheritance relationships."""
authitemchild,"""This table manages hierarchical relationships between authorization items in a role-based access control system. It establishes parent-child connections between different authorization items (like roles and permissions) by linking to the authitem table through both parent and child columns."""
average_price_unit_conversions,"""This table stores conversion factors and calculations for standardizing price units across different measurement systems (e.g., converting price per pound to price per kilogram). It serves as a reference table for consistent price comparisons and reporting across the system."""
average_price_units,"""This table stores average price data per unit for different items or products. Based on the name, it likely tracks pricing metrics and unit-based calculations for analysis purposes."""
banner_action_logs,"""This table tracks actions and changes made to banner content in the system, recording details like timestamps, user actions, and banner modifications. It serves as an audit log for banner-related activities and helps monitor content updates."""
basket_apology_users,"""This table tracks users who have received apology communications or compensation due to basket/order-related issues. It likely stores customer contact details and information about the apology or compensation offered."""
basket_builder_logs,"""This table logs events and actions related to the basket builder functionality, tracking how users interact with and modify their shopping baskets. It captures timestamps, user actions, and any relevant basket modification details for monitoring and debugging purposes."""
basket_design_product_availability,"""This table tracks the availability status of products within basket designs. It likely manages inventory or stock information for specific design configurations that can be added to shopping baskets."""
basket_designer_locks,"""This table manages lock states for the basket designer feature, preventing concurrent editing by multiple users. It tracks which user currently has a lock on the basket designer through the basket_designer_locked_by field, linking directly to the users table via user_id."""
basket_designs,"""This table stores design configurations for baskets, including their launch messaging settings. It connects to the communication_messages table through two different message IDs - one for regular basket launches and another specifically for vegan basket launches."""
baskets,"""This table manages basket records used in the droppoint system. Each basket has a unique identifier that links to droppoints, allowing tracking of which baskets are assigned to specific locations."""
basketsLang,"""This table appears to store language-specific content or translations related to shopping baskets or cart functionality. Based on the name, it likely contains localized text, labels, or messages used in the basket/cart interface of a multi-language application."""
blog,"""This table stores blog post content and related metadata such as titles, authors, and publication dates. It connects to blog_rating table through blog_id, enabling tracking of reader ratings and feedback for each blog post."""
blogLang,"""This table stores language settings and preferences for blog content and interfaces. It likely manages language-specific configurations and translations for a blog system."""
blog_category,"""This table stores categories or topics used to organize blog posts. It serves as a classification system to group related content and improve content navigation."""
blog_categoryLang,"""This table stores language-specific translations and content for blog categories in a multi-language blog system. It likely contains translated category names, descriptions, and other localized content, with each record representing a category's information in a specific language."""
blog_productsubcategory_rl,"""This table appears to be a relationship/mapping table connecting blog content with product subcategories. It likely enables the categorization of blog posts into specific product subcategories, allowing for better content organization and filtering."""
blog_rating,"""This table stores rating data for blog posts, tracking how users rate or score individual blog entries. It connects to the blog table through the blog_id foreign key, enabling the association of ratings with specific blog posts."""
blog_supplier_rl,"""This table appears to manage relationships between blog content and suppliers, likely serving as a reference lookup table. Based on the '_rl' suffix, it probably acts as a mapping or linking table between blog entries and supplier records."""
bonus_comments,"""This table stores additional comments and notes associated with bonus logging entries. It maintains a direct relationship with the bonus_logging table through the bonus_logging_id field, allowing for detailed annotations or explanations related to specific bonus records."""
bonus_logging,"""This table tracks bonus-related activities and approvals within the system, recording when bonuses are assigned, reviewed, and processed. It connects user actions through multiple relationships (recipient, creator, and reviewer), links to bonus reasons for categorization, and associates with tasks and transactions for complete bonus lifecycle tracking."""
bonus_multipliers,"""This table stores bonus multiplier factors applied to employee compensation during specific pay periods, with each multiplier linked to a reason code. It connects users receiving the multipliers, the staff member who created them, and associated comments, while tracking the pay period when each multiplier is effective."""
bonus_reasons,"""This table maintains a standardized list of reasons or justifications for awarding bonuses in the system. It serves as a reference table for the bonus_logging table, which tracks actual bonus events by referencing these predefined reasons through the bonus_reason_id."""
bonus_rollover,"""This table tracks bonus points or rewards that carry over between periods for users in the system. It manages the rollover amounts and dates for loyalty/bonus programs, linking directly to the users table through the user_id field."""
bundle_details_temp,"""This temporary table stores details about product bundles or package combinations. Based on the '_temp' suffix, it likely serves as a staging or temporary storage area for bundle information before being processed or moved to a permanent table."""
bundle_logs_temp,"""This temporary table stores logging data related to bundle processing operations. It appears to be used for tracking and debugging bundle-related activities before they are moved to a permanent storage location."""
cancelation,"""This table stores cancelation records and their associated details for customer service interactions. It connects to cancelation_responses through the cancelation_id field, allowing tracking of multiple responses or follow-ups to each cancelation case."""
cancelation_flow_action_logs,"""This table tracks actions and events that occur during the cancellation flow process. It logs various steps, decisions, and timestamps when users attempt to cancel a service or subscription."""
cancelation_reasons,"""This table maintains a list of standardized reasons why users or systems cancel operations or transactions. It serves as a reference table for tracking and categorizing cancellation events, linking to the options table where these reasons are utilized via the reason_id relationship."""
cancelation_reasons_lang,"""This table stores translated text/descriptions for cancellation reasons in different languages, likely used for a multi-language system. Based on the name, it probably contains localized versions of cancellation reason messages or labels."""
cancelation_responses,"""This table stores responses to questions related to cancelation requests, capturing user feedback during the cancelation process. It connects cancelation records, survey questions, and user data through their respective IDs, enabling analysis of cancelation reasons and user feedback."""
capacity_types,"""This table defines different types of vehicle capacity measurements (like weight, volume, or passenger count) used throughout the system. It serves as a reference table for both daily_vehicle_capacity and vehicle_capacities tables, providing standardization of capacity types across the vehicle fleet management system."""
careers,"""This table stores core career/job position information and serves as a master reference for career data. It connects to careersLang table which contains multilingual translations and descriptions of these careers via the career_id field."""
careersLang,"""This table stores language-specific content and translations for career information. It connects to the main careers table through the career_id foreign key, enabling multilingual support for career descriptions and details."""
cart,"""This table stores core information about carts used in operations. It serves as a central reference point for cart-related activities, assets, parking locations, and task type preparations through its cart_id relationships with other tables."""
cart_activity,"""This table tracks activities and changes made to shopping carts, linking cart events to specific tasks. It serves as a junction table connecting carts and tasks, enabling the system to record and monitor cart-related operations and their associated workflow tasks."""
cart_asset_associations,"""This table manages the relationship between shopping carts and digital assets, serving as a junction table to track which assets are in which carts. It enables a many-to-many relationship between carts and assets, allowing multiple assets to be added to multiple carts."""
cart_parking_location,"""This table stores information about designated parking locations or zones for shopping carts within retail spaces. It serves as a reference table for tracking where carts should be parked or collected, and links to cart_parking_location_activity to record events and actions related to each parking location."""
cart_parking_location_activity,"""This table tracks the history of cart movements and activities at different parking locations. It connects carts, parking locations, and tasks to record when carts enter, exit, or remain at specific parking spots. The table serves as an audit log for cart location changes and related task activities."""
certifications,"""This table stores professional certifications and credentials that can be earned or awarded. It likely includes certification names, issuing organizations, and validity periods."""
chargeback_log,"""This table tracks records of chargeback requests and disputes from payment transactions. It logs details about disputed charges, including timestamps, status changes, and resolution outcomes."""
cities,"""This table stores basic information about cities, including their names, locations, and relevant geographic data. It serves as a standalone reference table for city-related information."""
cleaning_task_item,"""This table stores individual cleaning tasks or items that need to be completed as part of cleaning activities. It likely contains details such as task descriptions, status, and specific cleaning requirements."""
cleaning_task_item_logs,"""This table tracks the history and changes made to individual cleaning task items, recording timestamps and modifications. It likely serves as an audit log for cleaning-related activities, storing details about when tasks were updated, completed, or modified."""
cleaning_tasks,"""This table tracks cleaning-related tasks, activities, and assignments within a system. It likely stores details such as task descriptions, status, schedules, and completion records for cleaning operations."""
cleaning_violation,"""This table records instances of cleaning violations that occur within the system. It stores details about specific cleaning-related infractions and links to the cleaning_violation_type table to categorize the type of violation through the cleaning_violation_type_id."""
cleaning_violation_type,"""This table maintains a standardized list of different types of cleaning violations that can occur in a facility. It serves as a reference table for the cleaning_violation table, allowing consistent categorization of violations through the cleaning_violation_type_id relationship."""
cleaning_workstation_colours,"""This table stores the available colours for cleaning workstations in a facility management system. It likely serves as a reference table for workstation colour coding or visual identification purposes."""
clock_io,"""This table records employee time clock entries and exits, tracking when workers start and end their shifts. It typically stores timestamps, employee identifiers, and the type of clock action (in/out)."""
cold_chain_actions,"""This table tracks actions and events related to cold chain monitoring and temperature-controlled storage or transportation of goods. It likely records timestamps, temperature readings, location data, and any interventions or alerts related to maintaining proper cold chain conditions."""
communication_messages,"""This table stores communication messages used in basket-related notifications and updates. It connects to basket_designs table through two different relationships, likely managing separate message types for regular and vegan basket launches."""
communication_messagesLang,"""This table stores language-specific variations of communication messages or notifications used in the system. It likely contains translated versions of message templates or content, enabling multi-language support for communications."""
community_bee_member_count,"""This table tracks the number of members in different community bee groups over time. It appears to be a standalone metrics table used for monitoring community size and growth patterns."""
community_bee_welcome_messages,"""This table stores welcome message templates used in community bee features. It serves as the primary source for welcome message content, with translations managed through the community_bee_welcome_messages_lang table via the id relationship."""
community_bee_welcome_messages_lang,"""This table stores translated versions of community welcome messages in different languages, linked to their base message via community_bee_welcome_message_id. It serves as a localization table for welcome messages, enabling multi-language support for community greetings."""
community_event_email_templates,"""This table manages the association between email templates and community events, defining which templates are used for event-related communications. It connects community events, email schedules, email templates, and scheduled events through their respective IDs, enabling automated event-based email communications."""
community_event_sub_types,"""This table categorizes specific subtypes or variations of community events, providing a more detailed classification system. It connects to the main community_events table to specify event categories and links to scheduled_events to define their subtypes. This structure allows for better organization and filtering of different event variations within the community system."""
community_events,"""This table serves as the central repository for community event records, storing essential information about various community-based activities and programs. It acts as the primary reference point for multiple related tables that handle specific aspects of events such as email templates, attachments, media, FAQs, testimonials, and waitlists. The table enables comprehensive event management by connecting to scheduling systems and institution requests through its unique community_events_id."""
community_events_attachments,"""This table stores attachments (like files, images, or documents) associated with community and scheduled events. It serves as a junction table connecting attachments to either community_events or scheduled_events tables through their respective IDs."""
community_events_availability,"""This table tracks availability and scheduling details for community events, storing information like dates, times, and capacity limits. It connects directly to the community_events table through the community_events_id foreign key, enabling each event to have specific availability records."""
community_events_contacts_tags,"""This table manages tags associated with community institution contacts for event organization and categorization purposes. It creates a connection between contact records and their relevant tags or labels through the community_institution_contacts_id relationship."""
community_events_email_logs,"""This table tracks email communications sent for community events, logging details of each email notification sent to users. It maintains records of which email templates were used and connects to the users table both for recipients (destination_user_id) and senders (created_by). The table helps monitor email delivery and provides an audit trail of event-related communications."""
community_events_faq,"""This table stores frequently asked questions (FAQs) and their answers specific to community events. It connects to the community_events table through community_events_id, allowing each event to have its own set of FAQs for attendees and participants."""
community_events_guests,"""This table tracks guest attendance and registration details for community events, linking users to specific scheduled events. It maintains the connection between attendees, event bookings, and their associated transactions. The table serves as a bridge between users, events, and payment records."""
community_events_lang,"""This table stores language-specific translations and localized content for community events. It connects to the main community_events table through the community_events_id foreign key, enabling multilingual support for event details."""
community_events_media,"""This table stores media files (such as images, videos, or documents) associated with community events. It maintains a direct relationship with the community_events table through the community_events_id field, allowing each event to have multiple media attachments."""
community_events_testimonials,"""This table stores testimonials and feedback from participants about community events. It connects event records from community_events table with the institutions involved through community_institutions, allowing tracking of which organizations provided testimonials for specific events."""
community_events_waitlist,"""This table manages waitlist entries for community events when they reach capacity, tracking which users are waiting to attend specific events. It connects users to community events through foreign keys (user_id and community_events_id), enabling organizers to manage overflow attendance and notify users when spots become available."""
community_institution_contacts,"""This table maintains contact records and relationships between users and community institutions. It serves as a central point connecting users who interact with institutions, while also linking to scheduled contacts and event contact tags. The table enables tracking and managing institutional relationships across the community platform."""
community_institution_scheduled_contacts,"""This table manages scheduled contact events between community institutions and their contacts, linking specific contact records to scheduled events. It serves as a junction table connecting community_institution_contacts with scheduled_events, enabling tracking of when and how institutions interact with their contacts."""
community_institutions,"""This table stores information about institutions (such as schools, community centers, or organizations) that participate in community events and programs. It serves as a central registry for institutional partners, connecting to related tables that track their event requests, scheduled events, contacts, and testimonials through the community_institution_id field."""
community_messages,"""Stores messages and announcements posted within the community platform. Each message is linked to its author through the author_id field which references the users table's user_id column."""
community_pool_campaigns,"""This table tracks community pool fundraising campaigns and their associated details. It manages information about community-driven initiatives to raise funds for public pool projects, including campaign goals, progress, and status."""
community_pool_status,"""This table tracks the current status and operational metrics of community pools. It stores information such as pool availability, maintenance schedules, and capacity levels."""
community_representative_group,"""This table stores basic information about community representative groups or organizations. It serves as the primary reference table for group identification and is linked to detailed group information through community_representative_group_details table via the community_representative_group_id."""
community_representative_group_details,"""This table stores detailed information about members within community representative groups, linking individual users to their respective groups. It connects users to their representative groups through the user_id and community_representative_group_id relationships, enabling tracking of group membership and roles."""
community_representative_group_orders_shipped_logs,"""This table logs shipping records and tracking details for orders placed by community representative groups. It appears to be an audit/tracking table that records when and how group orders were shipped."""
community_representative_group_subs_logs,"""This table logs subscription-related activities and changes for community representative groups. It tracks historical subscription events, modifications, and status changes for groups representing different communities."""
companies,"""This table stores core company information and serves as a central reference for business entities in the system. It connects to multiple related tables including company language translations, contracts, orders, user associations, and violation records through the company_id field."""
companiesLang,"""This table stores language-specific content and translations for company information. It connects to the main companies table through the company_id foreign key, enabling multilingual support for company data."""
company_notes,"""This table stores general notes, comments, and annotations related to company operations and activities. It serves as a standalone repository for internal documentation and memos without direct relationships to other tables."""
company_projects,"""This table tracks company project details including project names, statuses, and related information. It serves as a standalone repository for project management data."""
company_resources,"""This table manages and tracks various resources owned or used by the company, such as equipment, software licenses, and facilities. It serves as a central inventory system for monitoring company assets and their current status."""
compilation_of_recent_orders_per_user,"""This table aggregates recent order data summarized at the user level, providing a consolidated view of user purchasing activity. It serves as a denormalized snapshot of order patterns and metrics per user, likely used for reporting and analysis purposes."""
config,"""This table stores system configuration settings and parameters used across the application. It typically contains key-value pairs for various application settings and preferences."""
contract,"""This table stores contract information and details for agreements between the system and companies. It connects to the companies table through company_id to track which company owns each contract, and links to custom_rule table through contract_id to define specific rules or terms for each contract."""
countries,"""This table stores basic country information such as names, codes, and geographical data. It serves as a reference table for country-specific data across the system."""
coupon_receivers,"""This table tracks which users or customers have received specific coupons or promotional offers. It likely stores information about when coupons were distributed and their redemption status."""
coupons,"""This table manages coupon data including discount details, validity periods, and redemption rules. It supports parent-child coupon relationships, links to specific products for targeted promotions, and connects to droppoints and user redemption records. The table serves as the central reference for all coupon-related operations in the system."""
coupons_droppoints,"""This table manages the association between coupons and physical dropoff/pickup locations (droppoints) where those coupons can be used. It serves as a junction table connecting the coupons and droppoints tables, enabling a many-to-many relationship between these entities."""
credit_card_popup,"""This table manages credit card promotional popup configurations and display settings for the website. It likely stores parameters such as popup timing, frequency, content, and targeting rules for credit card offers shown to users."""
crops,"""This table stores information about different agricultural crops and their characteristics. It likely includes data such as crop names, growing seasons, yield metrics, and cultivation requirements."""
custom_base_basket_user_products_list,"""This table maintains a list of custom products that users have added to their personalized shopping baskets. It appears to be a standalone table tracking user-specific product selections for customized base baskets."""
custom_message_to_display_on_checkout,"""This table stores custom messages or notifications that are displayed to customers during the checkout process. It likely contains message content, display conditions, and status flags to control when specific messages appear at checkout."""
custom_rule,"""This table stores custom rules or conditions that can be applied to specific contracts, identified by contract_id. It enables flexible rule configuration and customization at the contract level by linking directly to the contract table."""
custom_violation_rates,"""This table tracks custom violation rates for specific scenarios or business rules. It appears to be a standalone table for monitoring and analyzing violation patterns or compliance issues."""
custom_violation_rule,"""This table stores custom rules for detecting and managing violations within the system. It defines specific conditions and criteria that constitute a violation, allowing for flexible and configurable violation detection."""
customization_log,"""This table tracks changes and customizations made within the system, recording details like what was modified, when, and by whom. It serves as an audit trail for customization activities and configuration changes."""
cycle_count_history,"""This table maintains a historical record of cycle counts performed on inventory items, tracking when physical counts were conducted and any discrepancies found. It likely stores details such as count dates, item quantities, counter ID, and variance between expected and actual counts."""
daily_vehicle_capacity,"""This table tracks the capacity settings for vehicles on a daily basis, storing specific capacity values and their types. It connects to capacity_types to define the type of capacity being measured (e.g., weight, volume, passenger count) and links to daily_vehicle_setting for specific vehicle configuration details."""
daily_vehicle_setting,"""This table manages daily configuration settings for vehicles in a transportation or logistics system. It serves as a central reference point connecting vehicle-specific data (from ww_vehicles) with daily operational parameters like capacity, skills, and time windows through related tables. The table enables tracking and controlling vehicle-specific settings on a daily basis."""
daily_vehicle_skill,"""This table stores skill configurations assigned to vehicles on a daily basis. It connects daily vehicle settings to specific skill types, allowing vehicles to be associated with different capabilities or qualifications for each operational day."""
daily_vehicle_time_window,"""This table defines specific time windows or operating hours for vehicles based on their daily settings. It connects to daily_vehicle_setting table to associate time windows with specific vehicle configurations and scheduling parameters."""
data_for_daily_sales_forecaster,"""This table stores daily sales data and related metrics used for forecasting future sales performance. It appears to be a standalone table focused on time-series sales data for predictive analytics purposes."""
department_approver_levels,"""This table defines the approval hierarchy and authorization levels within different departments. It likely stores information about who can approve what types of requests or transactions at various organizational levels."""
department_approvers,"""This table maintains a list of authorized approvers for different departments within an organization. It likely stores approver details and their associated department assignments for workflow and approval processes."""
department_shifts,"""This table manages shift configurations and schedules for different departments within the organization. It connects to temp_departments to associate shifts with specific departments, while linking to department_shifts_days for daily scheduling details and department_shifts_lang for multilingual shift information."""
department_shifts_days,"""This table maps specific days to department shifts, indicating which days each department shift operates. It connects to the department_shifts table through department_shift_id, allowing the system to track and manage shift schedules by day for each department."""
department_shifts_lang,"""This table stores language-specific translations and localized content for department shifts. It connects to the department_shifts table through the department_shift_id foreign key, enabling multilingual support for shift-related information."""
department_teams,"""This table manages the teams within each department, establishing the organizational structure of the company. It connects departments from temp_departments to their respective teams and links to user_teams to track team membership. The table serves as a bridge between departmental hierarchy and team-level organization."""
departments,"""This table stores department information within an organization, such as department names, codes, and other departmental details. It serves as a reference table for organizing and categorizing different business units or divisions."""
deployment_logs,"""This table tracks deployment events and activities within the system, storing details about software/application deployments including timestamps, status, and related metadata. It serves as an audit log for monitoring and troubleshooting deployment processes."""
device_usage,"""This table tracks device usage metrics and activity patterns for connected devices. It stores data like usage duration, timestamps, and device-specific metrics to monitor and analyze how devices are being utilized."""
dg_participant_action_log,"""This table logs actions and activities performed by participants in a digital system. It serves as an audit trail to track participant behavior and interactions over time."""
direct_giving_feedback,"""This table stores feedback and responses related to direct giving activities or donations. It likely captures user comments, ratings, or suggestions about their direct giving experience."""
disabled_subcategories,"""This table tracks which product subcategories have been disabled by specific users in the system. It maintains a record of subcategory deactivations by linking user_id to the users table and subcategory_id to the productSubCategories table, enabling accountability and history tracking of category management actions."""
discount_log,"""This table tracks the history of discount applications and promotional activities in the system. It logs details about when discounts were applied, their amounts, and any relevant discount codes or conditions."""
discount_log2,"""This table logs historical records of discounts and promotional activities applied in the system. Based on the '2' suffix, it appears to be a second version or archive of discount tracking data."""
discount_log2_new,"""This table appears to track historical discount-related events or changes in a logging format, likely version 2 of the system. It serves as an audit trail for discount modifications or applications, though without direct relationships to other tables."""
discount_log_new,"""This table tracks the history and details of discounts applied across the system, including discount amounts, types, and timestamps. It appears to be a logging table that records discount-related activities for auditing and reporting purposes."""
distanceCalculation,"""This table stores distance calculation results and related parameters used in spatial computations. It appears to be a standalone table for tracking and logging distance measurements without direct relationships to other tables."""
districts,"""This table stores information about geographic or administrative districts within a region or organization. Districts typically represent defined areas or zones used for organizational, governmental, or administrative purposes."""
driver_bonus_contract,"""This table manages bonus contract details and incentive programs for drivers in the system. It likely stores information about bonus criteria, payout amounts, and contract terms for driver performance rewards."""
driver_break,"""This table tracks break periods taken by drivers during their routes, connecting to the users table for driver identification and ww_routes for route details. It serves to monitor driver rest periods and ensure compliance with break requirements."""
driver_notes,"""This table stores notes and comments related to drivers in the system. It maintains a record of driver-specific observations, feedback, or incidents, and connects to the users table through the driver_id field which references user_id."""
driver_processed_bonus,"""This table stores processed bonus calculations and payments for drivers. It likely tracks completed bonus incentives, payment status, and related metrics for driver compensation programs."""
driver_zipcode_ranking,"""This table maintains rankings or performance metrics for drivers grouped by ZIP code areas. It likely stores aggregated statistics and performance indicators to evaluate driver activity or service quality within specific geographic regions."""
drop_instance,"""This table stores information about individual delivery drop instances, representing specific delivery points or stops in a logistics system. It serves as a central reference for marketplace capacities, orders, routing jobs, and worldwide orders through its drop_instance_id relationships."""
drop_instance_empty_pickups,"""This table tracks instances where delivery drivers arrive at pickup locations but find no items to collect. It likely records details such as timestamps, driver IDs, and location information for empty pickup attempts."""
drop_instance_type,"""This table likely stores information about different types of instance drops or drop events in a system. It appears to be a reference or lookup table defining categories or types of drops that can occur."""
drop_instances_marketplaces_capacity,"""This table tracks marketplace capacity information for specific drop instances, storing details about available capacity across different marketplaces. It connects to the drop_instances table through the drop_instance_id field, enabling tracking of capacity metrics for each drop event."""
dropinstance_transfer,"""This table manages transfer records for drop instances, tracking the movement or reassignment of resources between different states or owners. It connects to dropinstance_transfer_users through transfer_id, enabling the association of multiple users with a single transfer operation."""
dropinstance_transfer_users,"""This table manages the association between users and dropinstance transfers, tracking which users are involved in specific transfer operations. It connects transfer records from dropinstance_transfer table with user subscription data via subscription_id, establishing the relationship between transfers and the users' subscription status."""
droppoint_applications,"""This table manages applications for drop points, which are locations where users can drop off or collect items. It connects to the users table twice: once through pup_coordinator_id to identify the coordinator managing the drop point, and again through approved_by to track which administrator approved the application."""
droppoint_group,"""This table manages collections or categories of drop points (delivery/collection locations) within a logistics or delivery system. It serves as the parent table for droppoint_groupLang, which stores language-specific translations of group names and descriptions."""
droppoint_groupLang,"""This table stores language-specific translations and localized content for droppoint groups. It connects to the droppoint_group table through the droppoint_group_id field, enabling multilingual support for group-related information."""
droppoint_zipcode_region,"""This table maps droppoints to their corresponding zipcode regions, creating a many-to-many relationship between these entities. It serves as a junction table connecting the droppoints table with the zipcode_region table, enabling tracking of which droppoints serve specific geographic regions."""
droppoints,"""This table stores information about delivery or collection points where orders can be dropped off or picked up. It serves as a central hub connecting various operational aspects including coupons, baskets, products, territories, routes, and vehicles. The table links to user data for primary contacts and manages geographical information through zipcode regions."""
droppointsLang,"""This table appears to store language-specific content or translations for drop points or delivery locations. It likely contains localized text and descriptions for drop-off locations in different languages."""
droppoints_categories_exclusion,"""This table manages exclusion rules for specific droppoint categories, determining which categories should not be available at certain locations or under specific conditions. It likely serves as a configuration table to restrict or filter out incompatible droppoint categories in the delivery or logistics system."""
droppoints_coordinators,"""This table manages the association between droppoints and their assigned coordinators through user references. It links to the users table via user_id to identify which users have coordinator responsibilities for specific droppoints."""
droppoints_subcategories_exclusion,"""This table manages exclusion rules for specific subcategories at droppoints, likely used to prevent certain item types from being accepted at particular collection points. It appears to be a mapping table that defines which subcategories are not allowed at specific droppoint locations."""
dry_ice_schedule,"""This table manages dry ice delivery and replenishment schedules, tracking timing and quantities for various locations or departments. It likely stores delivery dates, amounts, and location details for dry ice distribution planning."""
dynamic_pricing_logs,"""This table records historical pricing changes and adjustments made through the dynamic pricing system. It logs price modifications, timestamps, and related factors that influenced pricing decisions."""
editor_content,"""This table stores content and data created or modified within an editor interface. It likely contains text, formatting, and revision history for edited content."""
eh_employee_highlight_logs,"""This table tracks logs and records of employee highlights or recognition events within the system. It likely stores details about when and why employees were recognized, serving as an audit trail for employee appreciation activities."""
eh_employee_mood_responses,"""This table stores employee mood survey responses and feedback collected from workplace sentiment tracking. It captures emotional wellbeing data and satisfaction levels from employees over time."""
eh_employee_pinned_tools,"""This table tracks which tools or features employees have pinned or marked as favorites within the system. It serves as a personalization mechanism to help employees quickly access their most frequently used tools."""
eh_highlight_channels,"""This table stores configuration data for highlight channels, likely used for event or content highlighting functionality. Based on the name 'eh_' prefix, it appears to be part of an event handling or highlighting system."""
eh_highlights,"""This table stores highlighted text selections and annotations made by users within electronic content or documents. Based on the name 'eh_highlights', it likely contains highlight data for an electronic or e-reader highlighting system."""
eh_monthly_questions,"""This table tracks monthly questions or inquiries, likely for reporting or analysis purposes. Based on the 'eh' prefix, it appears to be part of a larger system, though it operates independently without direct relationships to other tables."""
eh_monthly_servey_answers,"""This table stores responses from monthly employee health surveys, capturing individual answers and feedback. It appears to be a standalone table for tracking periodic health-related data collection from employees."""
eh_question_channels,"""This table manages the configuration and settings for question-related channels or categories within the system. It likely stores channel identifiers, names, and properties that determine how questions are organized and displayed."""
email_campaigns,"""This table manages email marketing campaign details including campaign names, schedules, and status information. It connects to email_recipients to track who receives each campaign and to email_template to define the content and layout used in the campaign."""
email_clicks,"""This table tracks when and how users interact with email links and campaigns by recording click events. It captures essential metrics like click timestamps, email identifiers, and user engagement data for email marketing analytics."""
email_keywords,"""This table stores keywords or phrases extracted from email content for analysis and categorization purposes. It likely contains common terms, their frequency, and relevance scores to help with email classification and search functionality."""
email_products,"""This table stores information about email-related products or services offered by the organization. It likely contains details such as product names, descriptions, pricing, and other attributes specific to email-based offerings."""
email_recipients,"""This table maintains a list of recipients for email campaigns, storing contact information and recipient-specific details. It connects to email_campaigns to track which campaigns recipients are part of, while linking to email_schedule and notification_messages to manage delivery timing and message content."""
email_reminders,"""This table manages scheduled email reminder records and their delivery status. It stores information about when reminders should be sent, their content, and whether they've been successfully delivered."""
email_reply_template,"""This table stores pre-defined email response templates used for standardized communications. These templates can be used to quickly respond to common inquiries or situations with consistent messaging."""
email_reply_templateLang,"""This table stores localized versions of email reply templates in different languages. It likely contains template content, language codes, and template identifiers for managing multilingual email responses."""
email_schedule,"""This table manages the scheduling details for automated email communications, defining when specific email templates should be sent. It coordinates the timing and delivery of emails by connecting email templates with their intended recipients through relationships with email_template and email_recipients tables, while also supporting community event-specific email scheduling."""
email_sender,"""This table manages email sending configurations and settings for outbound communications. It likely stores sender details, SMTP credentials, and email templates for system-generated messages."""
email_senderLang,"""This table stores language preferences or settings for email senders in the system. It likely tracks which language an email sender uses or prefers when composing messages."""
email_stats,"""This table tracks email-related metrics and performance statistics, likely including metrics such as open rates, click-through rates, and delivery status. It appears to be a standalone analytics table for monitoring email campaign performance."""
email_template,"""This table stores email template configurations and content used across various communication features in the system. It serves as a central repository for reusable email templates, connecting to event-related emails, email logs, scheduled emails, and email campaigns. The templates can be managed through email_template_auth for access control."""
email_templateLang,"""This table stores localized versions of email templates in different languages, allowing for multilingual email communications. It likely contains template content, language codes, and template identifiers."""
email_template_associations,"""This table manages the associations between email templates and other entities in the system. It likely serves as a mapping table to connect email templates with specific use cases, campaigns, or triggers where they should be used."""
email_template_auth,"""This table manages authorization rules and permissions for email templates, determining which users or roles can access and modify specific templates. It connects to the email_template table through the email_template_id foreign key to establish template-specific access controls."""
employee_daily_stats,"""This table tracks daily performance metrics and statistics for employees, connecting their activities to schedules and tasks. It serves as a central record for employee productivity data, linking to user profiles, scheduling information, and specific task statistics. The table enables detailed tracking of different types of daily statistics through its relationships with employee_daily_stats_types and task_stats tables."""
employee_daily_stats_types,"""This table maps different types of tasks or activities to employee daily statistics records. It serves as a junction table connecting employee daily performance data with predefined task type configurations, allowing tracking of various task categories performed by employees."""
employee_handling_instructions_association,"""This table manages the associations between employees and their specific handling instructions or protocols. It likely serves as a junction/mapping table connecting employee records with predefined handling instructions, enabling multiple instructions to be assigned to each employee."""
employee_notes,"""This table stores notes and comments related to employees, likely for HR purposes or performance tracking. While currently standalone, it could potentially link to an employees table in the future via an employee_id column."""
employee_training,"""This table tracks employee training activities and progress, linking specific tasks and their default settings to individual employees. It connects training sessions to employees through the employee_id, associates them with specific tasks via task_id, and links to default training parameters through task_type_defaults_id, while also connecting to training statistics for performance tracking."""
employee_warnings,"""This table tracks formal warnings and disciplinary actions issued to employees within the organization. It maintains a record of warnings given by managers to employees, connecting to the users table twice: once for the employee receiving the warning (employee_id) and once for the manager issuing it (manager_id)."""
euf_action_log,"""This table logs actions and activities performed within the EUF (End User Framework) system. It serves as an audit trail to track system events, user interactions, and important changes."""
euf_exclude_transactions,"""This table maintains a list of transactions that should be excluded from EUF (End User Fee) calculations. It connects to the transactions table via transaction_id to identify specific transactions that need to be exempted from fee processing."""
events,"""This table stores event-related information such as event names, dates, locations, and other event details. It appears to be a standalone table without direct relationships to other tables in the database."""
external_job_websites,"""This table stores information about external job posting websites and job boards where company positions can be advertised. It likely includes details such as website URLs, API credentials, and posting costs for integration with external recruitment platforms."""
face_encodings,"""This table stores facial biometric data encodings used for user authentication and identification purposes. Each encoding is linked to a specific user through the user_id foreign key that connects to the users table."""
family_featured_texts,"""This table stores featured text content associated with marketplace families, such as promotional descriptions or highlighted information. It connects to marketplace_families to identify which family the content belongs to, and links to family_featured_texts_lang for multilingual versions of the featured text content."""
family_featured_texts_lang,"""This table stores language-specific translations and content for featured texts associated with families. It connects to the main family_featured_texts table through the family_featured_id field, enabling multilingual support for featured family content."""
faq,"""This table stores frequently asked questions and their corresponding answers for reference and display purposes. It serves as a standalone knowledge base to help users find quick answers to common questions."""
faqLang,"""This table stores FAQ content in different languages, likely containing questions and answers for multilingual support. It appears to be a standalone reference table for managing localized FAQ content."""
faq_category,"""This table stores categories or groupings used to organize frequently asked questions (FAQ) content. It helps structure and classify FAQ entries for better organization and navigation."""
faq_categoryLang,"""This table stores language-specific translations for FAQ categories, likely containing category names and descriptions in different languages. Based on the name, it appears to be a localization table that connects FAQ categories with their multilingual content."""
favorites,"""This table tracks which products users have marked as favorites or wishlisted. It creates a many-to-many relationship between users and products, connecting to the users table via user_id and to the products table via product_id."""
forecasting_human_factor,"""This table stores human-related factors and variables that influence forecasting models and predictions. It likely captures qualitative inputs like expert judgments, behavioral patterns, or human-driven adjustments that affect forecast accuracy."""
form_timer_log,"""This table logs timing data and events related to form interactions and submissions. It tracks metrics like how long users spend on forms and when specific form-related actions occur."""
fraud_scoring_log,"""This table logs fraud scoring events and results for transactions or activities in the system. It maintains a historical record of fraud detection assessments, including scoring timestamps, risk levels, and evaluation outcomes."""
fraud_scoring_whitelist,"""This table maintains a list of trusted entities (users, IPs, or accounts) that are pre-approved to bypass standard fraud checks. It serves as a whitelist/allowlist to reduce false positives in fraud detection systems."""
fraudulent_reasons,"""This table stores predefined reasons or categories for marking transactions or activities as fraudulent. It serves as a reference lookup table for fraud classification and reporting purposes."""
gh_crop,"""This table stores information about agricultural crops and their characteristics. Based on the 'gh' prefix, it likely contains greenhouse-specific crop data."""
gh_crop_variety,"""This table stores information about different varieties of crops, including their characteristics and properties. It serves as a reference table for crop variety data that can be used in agricultural management and planning."""
global_stats,"""This table stores global system-wide statistics and aggregate metrics for the entire application. It acts as a central repository for high-level performance indicators and cumulative data points that don't belong to any specific entity."""
group_vacation_communities,"""This table stores information about online communities focused on group vacation planning and travel coordination. It likely contains details about community names, member counts, creation dates, and vacation-related discussion topics."""
group_vacation_setting,"""This table stores vacation-related settings and preferences for groups within the system. It likely manages group-wide availability, out-of-office configurations, and vacation scheduling rules."""
hr_applicant_archive_infos,"""This table archives historical information about job applicants who have gone through the hiring process. It maintains a record of past applicant data for compliance, reporting, and analysis purposes."""
hr_applicant_emergency_infos,"""This table stores emergency contact information for job applicants in the HR system. It contains details like emergency contact names, phone numbers, and relationships to applicants."""
hr_applicant_favourites,"""This table tracks job applicants that have been marked as favorites or shortlisted by HR personnel. It likely stores applicant IDs and the dates they were flagged as favorites, helping recruiters maintain a list of preferred candidates for future reference."""
hr_applicant_infos,"""This table stores information about job applicants in the HR system, including their personal details, contact information, and application status. It serves as a central repository for tracking candidates throughout the recruitment process."""
hr_applicant_linked_profiles,"""This table stores external professional profile links (like LinkedIn, GitHub, or portfolio URLs) associated with job applicants. It helps HR teams track and access candidates' online presence and professional credentials during the recruitment process."""
hr_applicant_reactivates,"""This table tracks instances when job applicants are reactivated in the hiring system after being previously inactive or rejected. It likely stores timestamps, reasons for reactivation, and status changes for applicants who are being reconsidered for employment opportunities."""
hr_applicant_steps,"""This table tracks the various stages and steps that job applicants go through during the hiring process. It likely stores information about each step's status, completion dates, and requirements for different positions in the recruitment workflow."""
hr_applicant_timelines,"""This table tracks the chronological events and milestones in a job applicant's recruitment process. It records timestamps and status changes for each stage of the application process, such as initial application, interviews, assessments, and final decisions."""
hr_department_images,"""This table stores image files and related metadata for HR department assets and materials. It likely contains photos of employees, department events, or corporate branding materials used in HR documentation and communications."""
hr_direct_report_role,"""This table manages direct reporting relationships and hierarchical roles within an organization's HR structure. It defines who reports to whom and tracks reporting line assignments for employees."""
hr_document_access_code,"""This table manages access codes used to control and track access to HR documents and files. It likely stores unique codes, their validity periods, and usage status for secure document sharing and retrieval."""
hr_document_settings,"""This table manages configuration settings and preferences for HR document handling and processing within the system. It likely stores parameters such as document retention periods, approval workflows, and default templates for HR-related documents."""
hr_document_types,"""This table maintains a catalog of different document types used in HR processes and employee records management. It serves as a reference table to standardize and categorize various HR-related documents across the system."""
hr_documents,"""This table stores HR-related documents and files such as policies, procedures, forms, and employee documentation. It serves as a central repository for managing and organizing human resources paperwork and digital files."""
hr_email_flows,"""This table manages automated email workflow configurations and templates used in HR communications. It stores predefined email sequences, triggers, and content templates for various HR processes like onboarding, offboarding, and employee notifications."""
hr_email_receivers,"""This table maintains a list of email recipients for HR-related communications and notifications. It likely stores employee or contact email addresses and preferences for HR communications."""
hr_email_templates,"""This table stores pre-defined email templates used by the HR department for common communications like offer letters, onboarding messages, and policy updates. The templates contain reusable content with placeholders that can be customized before sending."""
hr_employee_blacklists,"""This table maintains records of employees who are blacklisted or flagged for various concerns within the organization. It tracks individuals who are not eligible for rehire or require special attention during hiring processes due to past incidents or violations."""
hr_employee_contacts,"""This table stores contact information and communication details for employees within the HR system. It likely contains data such as phone numbers, email addresses, emergency contacts, and mailing addresses for HR-related communications."""
hr_employee_coupon,"""This table manages employee coupon/discount codes and their usage within the HR system. It likely tracks details such as coupon values, validity periods, and redemption status for employee benefits or rewards programs."""
hr_employee_documents,"""This table stores and manages employee-related documents and files such as contracts, certifications, and personal records. It serves as a central repository for HR document management and compliance tracking."""
hr_employee_emergency_infos,"""This table stores emergency contact information and critical medical details for employees in the HR system. It maintains essential data needed during emergencies, such as contact names, phone numbers, relationships, and any relevant medical conditions or allergies."""
hr_employee_infos,"""This table stores essential employee information and personal details for HR management purposes. It contains data like employee names, contact information, employment dates, and other HR-related attributes."""
hr_employee_referrals,"""This table tracks employee referral records, capturing details about employees who refer candidates for job positions. It likely stores information such as referrer details, referred candidate information, referral dates, and potential bonus/reward status."""
hr_employee_status_infos,"""This table tracks employee status information such as active/inactive status, employment type, and current work arrangements. It serves as a reference table for monitoring and managing employee statuses across the HR system."""
hr_employee_training,"""This table tracks employee training records, including completed courses, certifications, and training dates. It likely connects to an employees table via an employee_id field and potentially to a courses or certifications table through corresponding IDs."""
hr_event_attachments,"""This table stores file attachments and documents associated with HR events or activities. It likely contains file metadata such as file names, paths, upload dates, and file types for HR-related documentation."""
hr_event_checklists,"""This table maintains standardized checklists and procedures for various HR-related events and processes. It likely stores predefined tasks, requirements, and steps needed to complete HR activities such as onboarding, offboarding, or performance reviews."""
hr_event_dates,"""This table stores important HR-related dates and events such as holidays, company meetings, and employee milestones. It serves as a central calendar reference for human resources planning and scheduling."""
hr_event_guests,"""This table tracks guest information for HR-related events and functions. It likely stores details such as guest names, contact information, and attendance status for various company events or meetings."""
hr_event_organisers,"""This table stores information about individuals or entities responsible for organizing HR-related events and activities. It likely contains details such as organizer names, contact information, and their assigned event responsibilities."""
hr_event_recurring_settings,"""This table manages settings and configurations for recurring HR-related events or activities. It stores parameters such as frequency, duration, and scheduling rules for automatically repeating HR events."""
hr_event_series,"""This table manages recurring HR-related events or series of events within the organization. It stores configuration details for repeating events like regular training sessions, recurring meetings, or cyclical HR processes."""
hr_event_settings,"""This table stores configuration settings and parameters for HR-related events and activities within the system. It likely contains customizable options for managing HR processes, notifications, and event workflows."""
hr_events,"""This table tracks human resources related events and activities within the organization. It records various HR incidents, meetings, trainings, and other significant occurrences with their corresponding timestamps and details."""
hr_form_answers,"""This table stores responses submitted through HR-related forms and questionnaires. It captures individual answers and form submissions from employees, candidates, or other HR system users."""
hr_form_question_options,"""This table stores predefined answer options for questions used in HR forms and surveys. Each record represents a possible selection choice that can be presented to users when filling out HR-related questionnaires."""
hr_form_question_sections,"""This table organizes and groups related questions within HR forms into logical sections or categories. It helps structure form layouts and question organization for human resources documents and surveys."""
hr_form_question_types,"""This table maintains a catalog of different question types that can be used in HR forms and surveys. It serves as a reference table defining valid question formats like multiple choice, text input, or rating scales."""
hr_form_questions,"""This table stores questions used in HR-related forms and surveys within the organization. It serves as a repository of standardized questions that can be used across various HR processes and assessments."""
hr_form_setting_maps,"""This table manages mappings between HR forms and their configuration settings, defining how different form elements should be displayed or processed. It likely stores key-value pairs or configuration parameters that control form behavior and presentation in an HR system."""
hr_form_settings,"""This table manages configuration settings and parameters for HR-related forms and documents within the system. It stores form-specific preferences, default values, and display options that control how HR forms are presented and processed."""
hr_forms,"""This table stores various HR-related forms, documents, and templates used within the organization. It serves as a central repository for managing and tracking HR documentation such as employment contracts, policies, and standard operating procedures."""
hr_hiring_colaborators,"""This table tracks external collaborators and contractors involved in the hiring process, including recruiters, interviewers, and assessment providers. It stores essential information about these collaborators such as contact details, specialties, and engagement status."""
hr_hiring_leads,"""This table tracks potential job candidates and hiring leads for the HR department. It stores information about prospective employees who have shown interest or been identified as potential hires, including their contact details and current status in the hiring pipeline."""
hr_hiring_onboarding_settings,"""This table stores configuration settings and parameters for the HR hiring and employee onboarding processes. It manages default settings, workflows, and requirements used during recruitment and new employee orientation procedures."""
hr_hiring_process,"""This table tracks and manages the stages and activities within an organization's recruitment workflow. It stores information about job applications, interview stages, candidate statuses, and hiring decisions."""
hr_hiring_process_step_documents,"""This table stores documents and files associated with different steps in the hiring process workflow. It tracks required paperwork, forms, and documentation needed at various stages of recruitment and hiring."""
hr_hiring_process_steps,"""This table tracks the standardized steps and stages within an organization's hiring process workflow. It stores predefined recruitment stages like initial screening, interviews, assessments, and offer letters that can be referenced across hiring activities."""
hr_hiring_requests,"""This table tracks employee hiring requests and their associated details within the HR system. It stores information about open positions, requirements, approval status, and other hiring-related data."""
hr_hiring_settings,"""This table stores configuration settings and parameters related to the hiring process in the HR system. It manages default values, thresholds, and preferences for recruitment workflows and hiring procedures."""
hr_hiring_steps,"""This table tracks the standardized steps and stages in the company's hiring process workflow. It stores information about different recruitment phases like initial screening, interviews, and assessments that candidates must complete."""
hr_job_postings,"""This table stores job posting information and requirements for open positions within the organization. It contains details such as job titles, descriptions, qualifications, salary ranges, and posting status."""
hr_job_roles,"""This table maintains a catalog of job positions and roles within the organization's hierarchy. It stores standardized job titles, role descriptions, and associated metadata for HR management purposes."""
hr_leads,"""This table tracks potential job candidates and recruitment leads in the hiring pipeline. It stores contact information, status, and other relevant details about individuals being considered for employment opportunities."""
hr_marketing_reviews,"""This table stores employee performance reviews and feedback specifically related to marketing activities and campaigns. It captures evaluation metrics, comments, and assessments of marketing team members' performance and project outcomes."""
hr_offer_letter,"""This table stores offer letter details and documentation for potential employees during the hiring process. It contains information such as offer terms, compensation details, and the status of offer letters sent to candidates."""
hr_past_versions,"""This table maintains historical versions and changes made to HR-related records over time. It serves as an audit trail for tracking modifications to employee data, benefits, or other HR information."""
hr_referral_settings,"""This table stores configuration settings and parameters for the employee referral program. It manages referral-related rules, bonus amounts, eligibility criteria, and other program settings that control how the referral system operates."""
hr_request_details,"""This table stores details about HR-related requests and inquiries submitted within the organization. It tracks information such as request types, submission dates, status, and other relevant details for HR processing and tracking purposes."""
hr_request_reject_reasons,"""This table maintains a list of standardized reasons for rejecting HR-related requests or applications. It serves as a reference table for tracking and categorizing why specific HR requests were denied."""
hr_series_attachments,"""This table stores attachments and documents related to HR series or sequences of events. It likely contains files such as forms, documents, or media files associated with HR processes or employee records."""
hr_series_organisers,"""This table stores information about individuals or entities responsible for organizing HR-related event series or programs. It likely contains details about organizers' contact information, roles, and the specific series they manage."""
hr_setting_archive_options,"""This table stores configuration options for HR data archival settings and retention policies. It defines rules and parameters for how historical HR records should be archived, maintained, or purged from the system."""
hr_status_change_requirement_settings,"""This table stores configuration settings for HR status change requirements and validation rules. It defines the necessary conditions and documentation required when employees undergo status changes within the organization."""
hr_tags,"""This table stores HR-related tags or labels used for categorizing and organizing HR data within the system. Tags can be used to label employees, job postings, documents, or other HR-related items for easier searching and filtering."""
hr_tasks,"""This table tracks and manages human resources related tasks, activities, and assignments. It serves as a standalone task management system for HR-specific workflows and responsibilities."""
hr_temp_form_settings,"""This table stores configuration settings and preferences for HR temporary forms and templates. It manages form-specific parameters, default values, and display settings used in HR temporary documentation processes."""
hr_user_tags,"""This table manages tags or labels associated with HR system users, allowing for user categorization and filtering. Tags can be used for grouping employees by skills, departments, projects, or other custom classifications."""
hr_visibilities,"""This table manages visibility settings and access control rules for HR-related data and resources. It likely defines who can view or access specific HR information, documents, or sections within the system."""
identification_verification,"""This table tracks identity verification records and outcomes for users in the system. It maintains a record of verification attempts and their results, linking both the verified user and the staff member who performed the verification through relationships with the users table."""
institution_event_requests,"""This table manages event-related requests made by institutions within the community platform. It connects institution records with both community and scheduled events, while tracking which user initiated the request, creating a comprehensive link between institutions, events, and users."""
interactive_questions_answers,"""This table stores interactive questions and their corresponding answers, likely used for quizzes, surveys, or educational content. It appears to be a standalone table without direct relationships to other tables, suggesting it serves as a primary repository for Q&A content."""
interactive_questions_answersLang,"""This table appears to store language-specific answers for interactive questions, likely supporting multilingual content for a Q&A or quiz system. Based on the name, it probably contains translations or language variants of answers to interactive questions."""
interactive_questions_answers_params,"""This table stores configuration parameters and settings for interactive questions and their corresponding answers. It likely contains customization options, display settings, or validation rules that control how questions and answers behave in an interactive system."""
inventory,"""This table manages inventory lots and their tracking information within the system, including origin relationships and tower confirmations. It serves as a central point for various inventory-related tasks and quality checks, connecting to multiple task-specific tables through the lot_id. The table also supports inventory discounts and maintains relationships for lot verification and quality control processes."""
inventory_activity,"""This table tracks all inventory-related activities and operations within the system. It serves as a central record for inventory checks, adjustments, and lot verifications, connecting to specialized task type tables through their respective IDs. The table enables comprehensive tracking and auditing of inventory-related tasks and their outcomes."""
inventory_activity_images,"""This table stores images related to inventory activities or transactions. It likely contains file paths, timestamps, and references to specific inventory events or movements."""
inventory_activity_types,"""This table defines the standard types of inventory activities or transactions that can occur in the system (such as receiving, shipping, adjustments, or transfers). It connects to inventory_activity_typesLang table which stores multilingual descriptions for each activity type."""
inventory_activity_typesLang,"""This table stores language-specific translations and localized content for different inventory activity types. It connects to the inventory_activity_types table through the inventory_activity_type_id field, enabling multilingual support for inventory activity descriptions and labels."""
inventory_association,"""This table manages associations or mappings between different inventory items or categories. It likely serves as a junction/linking table to establish relationships between inventory-related entities, though specific relationships are not defined."""
inventory_check_action_clean,"""This table tracks specific actions and outcomes from inventory check tasks. It connects to task_type_inventorycheck table to associate actions with their corresponding inventory check task types, enabling tracking and management of inventory verification processes."""
inventory_check_action_discount,"""This table manages discount rules and settings applied during inventory check actions. It connects to task_type_inventorycheck table to associate specific discount parameters with different types of inventory check tasks."""
inventory_check_action_expiration,"""This table tracks expiration settings and rules for inventory check actions associated with specific inventory check task types. It connects to task_type_inventorycheck table to define when and how inventory check tasks should expire or become invalid."""
inventory_check_action_lotportioned,"""This table records actions and results related to inventory checks specifically for portioned lot items. It connects to task_type_inventorycheck table to specify the type of inventory check being performed, tracking the verification process for lot-based inventory management."""
inventory_check_action_recount,"""This table tracks recount actions performed during inventory checks, storing details of when items need to be recounted or verified. It connects to the task_type_inventorycheck table to specify the type of inventory check being performed during the recount action."""
inventory_check_action_relocate,"""This table tracks inventory relocation actions performed during inventory checks, recording movements of items between different locations. It connects to location_header table twice to track both the original and new locations of items, and links to task_type_inventorycheck to specify the type of inventory check being performed."""
inventory_check_comments,"""This table stores comments and feedback related to inventory check tasks. It connects to task_type_inventorycheck to associate comments with specific inventory checks, and links to users table to track who created each comment."""
inventory_discount,"""This table tracks discount records applied to specific inventory lots, storing information about price reductions and promotional offers. It connects to the inventory table through lot_id and maintains accountability by linking to users table via created_by to track who created each discount entry."""
inventory_snapshots,"""This table captures point-in-time snapshots of inventory levels and stock status across products. It maintains historical records of stock quantities, enabling trend analysis and inventory tracking over time."""
inventory_status,"""This table tracks the current inventory status and stock levels for products in the system. It maintains real-time stock information by linking to the products table through product_id, enabling accurate inventory management and availability tracking."""
inventory_uptodate_flags,"""This table tracks boolean flags indicating whether specific inventory records are up-to-date or require synchronization. It likely serves as a status indicator for inventory management processes and data validation checks."""
issuegp,"""This table appears to track issue-related data with a 'gp' designation, likely referring to general practitioner or general purpose issues. Without clear relationships to other tables, it seems to function as a standalone record of GP-related issues or incidents."""
links,"""This table stores URLs and related link information for tracking and managing web links within the system. It appears to be a standalone table without direct relationships to other tables."""
load_basket_route_info,"""This table stores routing information for load baskets, connecting warehouse routes with basket preparation and task details. It serves as a central reference point linking route data (ww_routes) with basket preparation buffers and load basket task types. The table enables tracking and management of load basket routing workflows through its relationships with multiple operational tables."""
location_header,"""This table stores primary location information and identifiers for warehouse or storage locations. It serves as a reference table for tracking location changes in inventory movements and condensing tasks. The table is referenced by inventory relocation actions (both source and destination locations) and various condensing-related operations."""
location_type,"""This table stores standardized categories or classifications of locations (e.g., residential, commercial, industrial). It serves as a reference table for defining and maintaining consistent location types across the system."""
lock_comments,"""This table tracks comments and details associated with user lock events in the system, recording who initiated the lock, who was locked, and who removed the lock if applicable. It connects to the lock_reasons table to specify the type of lock applied, and links to the users table in three ways: the user who applied the lock, the user who received the lock, and the user who removed it."""
lock_reasons,"""This table maintains a standardized list of reasons why items or records can be locked in the system. It serves as a reference table for lock_comments, where each lock_reason entry provides a predefined reason type that can be referenced via lock_type_id."""
lufa_event,"""This table stores event-related data for the LUFA system, tracking various types of events or activities. It likely includes event details such as timestamps, event types, and associated metadata."""
manual_hours,"""This table tracks manually entered work hours and adjustments for employees, with references to any applicable statutory holidays. It connects to the users table twice - once for the employee and once for the approving manager, while linking to stat_holiday table for holiday-related entries."""
marketing_campaign_referrals,"""This table tracks referral data and performance metrics for marketing campaigns. It stores information about referral sources, conversion rates, and campaign attribution data, linking to marketing_custom_urls table through the marketing_campaign_referral_id to associate referrals with specific campaign URLs."""
marketing_custom_urls,"""This table stores custom URLs created for marketing campaign referral tracking purposes. It maintains a record of unique tracking links and associates them with specific marketing campaign referrals through the marketing_campaign_referral_id foreign key."""
marketing_user_notes,"""This table stores notes and annotations made by marketing team members about customers. It maintains a dual relationship with the users table, tracking both the customer being discussed (customer_id) and the marketing team member who created the note (user_id)."""
marketplace_closed_dates,"""This table tracks dates when marketplaces are closed or not operating. It stores holiday schedules, maintenance periods, or other dates when trading or operations are suspended."""
marketplace_families,"""This table stores information about product families or collections within a marketplace system. It serves as a way to group related marketplace items together and connects to family_featured_texts table to provide descriptive content for each family grouping."""
marketplace_families_lang,"""This table stores language-specific translations and content for marketplace family categories or groupings. It likely serves as a localization table to support multiple languages for family-related marketplace content."""
marketplace_family_category,"""This table maintains a hierarchical categorization system for marketplace items by grouping related categories into families. It helps organize and structure the marketplace's product taxonomy for easier navigation and filtering."""
marketplace_family_product,"""This table stores product information specifically for family-oriented items or services available in the marketplace. It appears to be a standalone table tracking family-specific products or offerings, though it could potentially link to a main products table or marketplace listings."""
marketplace_family_sorted_products,"""This table stores sorted product listings organized by family/category groupings within a marketplace context. It likely contains ranked or prioritized product data to optimize display order and categorization for marketplace browsing."""
marketplace_family_subcategory,"""This table maintains a hierarchical classification of marketplace items by grouping subcategories into broader family categories. It helps organize and structure marketplace listings for better navigation and filtering capabilities."""
marketplace_family_supplier,"""This table manages the association between marketplace families and their approved suppliers. It likely serves as a reference table to track which suppliers are authorized to provide products or services within specific marketplace family groupings."""
marketplace_feedback,"""This table stores feedback and ratings from users about marketplace transactions or listings. It likely captures review comments, satisfaction scores, and timestamps to track user experiences and seller performance."""
marketplace_filter_log,"""This table logs the history and details of filter operations performed in the marketplace system. It tracks when and how users filter or search through marketplace listings, helping analyze user behavior and search patterns."""
marketplace_gifts_settings,"""This table stores configuration settings and parameters for the marketplace's gift-related features and functionality. It likely contains settings for gift wrapping options, gift message limits, and other gift-specific controls for the marketplace platform."""
marketplace_message,"""This table stores messages and communications exchanged within a marketplace platform. It likely contains message content, timestamps, and identifiers for message senders and recipients."""
marketplace_messageLang,"""This table stores language-specific message content and translations used in the marketplace system. It likely contains message templates, notifications, or UI text in different languages to support multilingual functionality."""
marketplace_product_tag,"""This table manages tags or labels associated with marketplace products, enabling product categorization and filtering. It connects to the products table through the product_id foreign key relationship, allowing multiple tags to be assigned to each product."""
marketplace_promotion,"""This table manages promotional campaigns and offers within the marketplace platform. It stores details about various promotions such as discounts, special deals, and promotional periods that can be applied to products or services."""
marketplace_promotion_content,"""This table stores promotional content and marketing materials used in marketplace campaigns. It contains details about promotional messages, banners, or special offers displayed across the marketplace platform."""
marketplace_without_second_harvest,"""This table appears to store marketplace data excluding Second Harvest related transactions or listings. It likely serves as a filtered or subset view of the main marketplace data for analysis or reporting purposes."""
marketplaces_capacity,"""This table tracks capacity and availability metrics for different marketplaces or sales channels. It likely stores data about maximum capacity, current utilization, and availability thresholds for various marketplace platforms."""
memcached,"""This table manages Memcached-related locking mechanisms and caching states for the application. It primarily handles basket designer locking functionality, connecting to the users table through the basket_designer_locked_by field which references user_id."""
menu,"""This table stores core menu information and structure for a food service or restaurant system. It contains the base menu data independent of language, and connects to menuLang table which provides multilingual menu item descriptions and names via the menu_id relationship."""
menuLang,"""This table stores menu item translations in different languages, allowing menu content to be displayed in multiple languages. It connects to the menu table through the menu_id foreign key, enabling multilingual support for menu items."""
menu_items,"""This table stores core menu item data such as prices, categories, and availability status. It connects to menu_itemsLang table which contains language-specific content (like names and descriptions) for each menu item through the menu_item_id relationship."""
menu_itemsLang,"""This table stores language-specific translations and localized content for menu items. It connects to the menu_items table through the menu_item_id field, enabling multilingual support for menu item names, descriptions, and other text content."""
message_bar,"""This table manages message bar notifications or announcements displayed at the top of a website or application interface. It likely stores message content, display duration, and visibility settings for system-wide alerts or temporary announcements."""
message_barLang,"""This table appears to store language-specific messages or translations for a bar/menu interface. Based on the name, it likely contains text content in different languages, possibly for displaying messages, labels, or notifications in a bar-related application."""
message_bar_roles,"""This table appears to manage role assignments or permissions specifically for a message bar feature in the application. It likely controls who can view, edit, or interact with message bar content."""
message_bar_urls,"""This table stores URLs associated with message bar notifications or announcements displayed on a website. It likely contains links that users can click within message bars to access additional information or related content."""
migrations,"""This table tracks database migration history, storing information about which schema migrations have been run and when. It helps maintain database version control and ensures consistent schema changes across different environments."""
mkt_content,"""This table stores core marketing content assets and their metadata, serving as the primary content repository. It connects to mkt_contentLang table which contains language-specific versions of each content piece through the mkt_content_id relationship."""
mkt_contentLang,"""This table manages language-specific variations of marketing content by associating content pieces with their corresponding language versions. It connects to the mkt_content table through mkt_content_id, enabling multilingual support for marketing materials."""
model_classes,"""This table stores classifications or categories of different models used in the system. It serves as a reference table for organizing and grouping various model types."""
model_fields,"""This table stores individual fields or attributes that belong to different data models in the system. It connects to model_fields_subcategories to organize and categorize these fields into logical groupings, allowing for structured field management and classification."""
model_fields_subcategories,"""This table categorizes and organizes different subcategories of model fields, providing a more granular classification system. It connects to the model_fields table through the mf_subcategory_id field, allowing for detailed categorization of model field types."""
mp_in_meal_members,"""This table manages the relationship between meals and members in a meal planning system, serving as a junction/mapping table. It connects meals (from mp_in_meals) with members (from mp_in_members) to track which members are associated with specific meals."""
mp_in_meals,"""This table stores meal records created by users in the meal planning system. It serves as the parent table for meal member entries, connecting to mp_in_meal_members through mp_meal_id, and links to the users table to track meal creators."""
mp_in_members,"""This table stores membership information for users who are part of meal planning groups. It connects individual users (via user_id) to the meal planning system and links to specific meal memberships through mp_in_meal_members (via mp_member_id)."""
mp_logs,"""This table stores logging data and events from the marketplace platform. It captures system activities, errors, and operational events for monitoring and debugging purposes."""
mp_meal_plans,"""This table stores meal plan details associated with customer orders. It tracks meal planning information and specifications, linking directly to the orders table through the order_id field."""
mp_meal_plans_details,"""This table stores detailed information about meal plans, including specific meal components, portions, and nutritional details. The 'mp' prefix suggests it's part of a meal planning system."""
multiplier_comments,"""This table stores comments and notes associated with specific bonus multipliers. It provides additional context and documentation for multiplier records by linking to the bonus_multipliers table through the bonus_multiplier_id field."""
multiplier_reasons,"""This table stores predefined reasons or justifications for applying bonus multipliers to calculations. It serves as a reference table that provides context for why specific multipliers are used, linking to the bonus_multipliers table through the multiplier_reason_id field."""
newsletter_confirmation_link,"""This table stores confirmation links sent to users who sign up for newsletters. It manages the unique tokens and expiration dates for email verification links to validate newsletter subscriptions."""
newslettercorpo,"""This table stores corporate newsletter subscriptions and related company information. It appears to be a standalone table for managing business/corporate newsletter recipients without direct relationships to other tables."""
notification_messages,"""This table stores notification message templates and content used for system communications. It connects to email_recipients for delivery information, notification_messages_lang for multilingual versions of messages, and user_notification_message_queue for managing message delivery queues."""
notification_messages_lang,"""This table stores translated versions of notification messages in different languages, linked to the main notification_messages table. It enables multi-language support for system notifications by maintaining language-specific message content for each notification template."""
notification_settings,"""This table manages user preferences for various types of notifications and alerts within the system. It stores settings like email notifications, push notifications, and communication frequency preferences for each user."""
oncall_calendar,"""This table manages on-call schedules and rotations for users in the system. It tracks which users are assigned to be on-call during specific time periods, linking to the users table through the on_call_user field which references user_id."""
op_records,"""This table stores operational records or transaction logs for system activities. Based on the name 'op_records', it likely maintains a history of operations or actions performed within the system for auditing and tracking purposes."""
options,"""This table stores available options/choices for survey questions, connecting to their translations in options_lang and actual responses in response_options. It links to questions table to associate options with specific questions, and to cancelation_reasons to provide cancellation option details."""
options_lang,"""This table stores language-specific translations and content for system options and settings. It connects to the main options table through the option_id foreign key, enabling multilingual support for configurable items."""
order_details,"""This table stores detailed information about individual order items, including quantities, prices, and product specifications. It typically serves as a line-item record for orders, capturing the specifics of what was purchased in each transaction."""
order_details_prepopulated,"""This table contains pre-filled order details data, likely used for testing, demonstration, or template purposes. It stores order-specific information in a standalone format without active relationships to other tables."""
order_details_prod_rec,"""This table stores detailed records of product orders and their recommendations. Based on the name, it likely contains order-specific details and product recommendations, possibly for analytics or personalization purposes."""
order_gift_receivers,"""This table stores information about gift recipients for orders, including their names, addresses, and contact details. It's used when customers want to send orders as gifts to other people instead of themselves."""
order_prod_rec,"""This table stores the recommended products associated with customer orders. It likely serves as a record of product recommendations made during or after order processing, potentially for future marketing or sales analysis purposes."""
orders,"""The orders table serves as the central repository for all order-related information in the system. It connects to multiple operational tables including meal plans, companies, delivery instances, ratings, and routing jobs through various foreign key relationships. This table acts as the backbone for tracking order status, fulfillment, and associated business processes across the platform."""
orders_auto_canceled_at_midnight,"""This table tracks orders that were automatically canceled during nightly system processes. It likely serves as an audit log for orders that were canceled due to specific business rules or system conditions at midnight."""
orders_cancelation_comments,"""This table stores comments and feedback provided when orders are canceled. It captures the reasons and explanations for order cancellations, helping track cancellation patterns and customer feedback."""
orders_ignore_payment,"""This table appears to store order records that should be excluded from payment processing or financial calculations. Based on the name, it likely serves as a reference list for orders that need to be ignored during payment-related operations."""
orders_prepopulated_logs,"""This table maintains logs of pre-populated order data before final order submission. It tracks temporary or draft order information for system auditing and debugging purposes."""
orders_prepopulated_product_exception,"""This table manages exceptions for pre-populated product data in orders, likely storing rules or conditions that deviate from standard order processing. It helps identify and handle special cases where default product population logic should not apply."""
packing_location,"""This table stores information about physical locations where packing activities occur within a facility or warehouse. It likely contains details such as location identifiers, zone names, or specific coordinates for packing stations."""
packing_order,"""This table tracks packing orders and their associated details for fulfillment operations. It likely stores information about items to be packed, packing instructions, and status of packing tasks."""
packing_stats,"""This table tracks statistics and metrics related to packing operations and efficiency. It likely stores data about packing times, completion rates, and performance indicators for warehouse or shipping activities."""
page,"""This table stores individual web pages or content entries within the system. It likely contains page content, titles, URLs, and other page-specific metadata."""
pageLang,"""This table stores language-specific settings and preferences for web pages or content. It likely manages language codes, localization settings, and default language configurations for a multilingual website or application."""
pallet_assignments,"""This table tracks the assignment and allocation of pallets within a warehouse or storage system. It likely stores information about which pallets are assigned to specific locations, zones, or tasks."""
pap_handling_instructions,"""This table stores handling instructions and guidelines for product packaging and manipulation. It contains specific directives for how products should be handled, packed, and processed during warehouse operations. The table connects to products through handling_instruction_id, providing detailed packing requirements for each product."""
pay_periods,"""This table defines the different pay periods used in the payroll system, such as weekly, bi-weekly, or monthly intervals. It connects to the bonus_multipliers table to determine specific bonus calculations for each pay period type."""
payment_logging,"""This table tracks payment-related events and transactions in the system, logging details such as payment status, amounts, and timestamps. It maintains a history of payment activities and connects to the users table through the user_id field for user identification and tracking."""
permission_log,"""This table tracks changes and updates made to permission-related configurations in the system. It serves as an audit log for modifications to user roles, department assignments, and permission settings, linking to detailed changes through related tables. The table connects to users table for tracking who made the changes, while associated permission log tables store the specific details of what was modified."""
permission_log_departments,"""This table tracks changes made to department relationships and hierarchies as part of the permission logging system. It maintains records of department modifications by linking to permission_log for audit details and temp_departments for both current and historical parent-child department relationships."""
permission_log_role_permissions,"""This table tracks changes made to role permissions within the permission logging system. It serves as a junction table connecting permission logs with affected roles, allowing the system to record which roles had their permissions modified in each logged permission change event."""
permission_log_roles,"""This table tracks changes made to role relationships and hierarchies within the permission system. It maintains a historical record of role modifications by logging the old and new parent roles, as well as direct role changes, connecting to the permission_log table for audit details and the roles table for role references."""
permission_log_user_roles,"""This table tracks changes in user role assignments as part of the permission logging system. It maintains a record of role changes by linking to the permission_log table for audit details, connecting to the roles table for both old and new role information, and referencing the users table for employee identification."""
phone_verification_code,"""This table stores temporary verification codes sent to users' phone numbers for authentication purposes. It typically includes the phone number, verification code, and expiration timestamp to manage the verification process."""
photo_reject_messages,"""This table stores predefined messages explaining why photos were rejected from the system. It likely contains standardized rejection reasons that can be used to provide feedback when photos don't meet acceptance criteria."""
pick_activities,"""This table tracks picking activities and operations in a warehouse or fulfillment center. It likely records details about items being picked from inventory, including timestamps, locations, and picker information."""
plans,"""This table stores subscription plan configurations and pricing tiers available in the system. It likely contains details such as plan names, prices, features, and duration periods."""
po_account_codes,"""This table stores purchase order account codes used for financial tracking and categorization. It likely contains accounting codes and descriptions used to classify different types of purchase orders and expenses."""
po_approval_routings,"""This table manages the approval routing configurations and workflows for purchase orders (POs). It defines who needs to approve POs and in what sequence, likely storing approver information, routing rules, and approval thresholds."""
po_audit_logs,"""This table maintains an audit trail of all changes and activities related to purchase orders (POs) in the system. It records timestamps, user actions, and modifications made to PO data for compliance and tracking purposes."""
po_catalog,"""This table stores product catalog information for purchase orders, likely including item details, specifications, and pricing. It serves as a reference table for available products that can be ordered through the purchasing system."""
po_catalog_item_tags,"""This table stores tags or labels associated with catalog items in a purchase order (PO) system. It likely serves as a way to categorize and organize catalog items for easier searching and filtering."""
po_catalog_item_types,"""This table maintains a list of valid catalog item types or categories used to classify items in a purchase order (PO) system. It serves as a reference table to standardize and control the types of items that can be added to purchase orders."""
po_catalog_tags,"""This table stores tags or labels used to categorize items in a purchase order (PO) catalog system. It likely serves as a reference table for organizing and filtering catalog items."""
po_catalog_unit_types,"""This table maintains a catalog of standard unit types (e.g., pieces, kilograms, meters) used in purchase orders and inventory management. It serves as a reference table for standardizing unit measurements across the purchasing system."""
po_countries,"""This table stores country information, likely including country names, codes, and related geographical data. It appears to be a standalone reference table for postal/shipping operations, commonly used to validate country selections and standardize country data across the system."""
po_currencies,"""This table stores currency-related data used for purchase orders and financial transactions in the system. It likely contains currency codes, exchange rates, and other currency-specific information needed for international transactions."""
po_dashboard_link_id,"""This table appears to store mapping or linking identifiers related to purchase order (PO) dashboard functionality. It likely serves as a reference table to maintain unique identifiers for dashboard elements or views."""
po_dashboard_link_users,"""This table manages user access and permissions for the purchase order (PO) dashboard interface. It likely stores user associations and access levels specific to the PO dashboard functionality."""
po_dashboard_links,"""This table stores dashboard link configurations and navigation elements for the purchase order (PO) system interface. It likely contains URLs, link text, and display settings for quick access to different PO-related functions and reports."""
po_department_employees,"""This table maintains a record of employees and their department assignments within a purchase order (PO) system. It likely stores employee details and their associated department information for tracking and organizational purposes."""
po_departments,"""This table stores department information for purchase order (PO) management. It likely contains department names, codes, and other organizational details used to categorize and track purchase orders."""
po_document_types,"""This table maintains a list of valid purchase order document types used in the procurement system. It serves as a reference table to categorize and validate different types of purchase order documents."""
po_documents,"""This table stores purchase order (PO) documents and their associated metadata. It likely contains information such as PO numbers, dates, document content, and status tracking for procurement processes."""
po_email_flows,"""This table manages email workflow configurations and sequences for purchase order (PO) related communications. It likely stores templates, triggers, and flow logic for automated PO email notifications and follow-ups."""
po_exchange_rates,"""This table stores currency exchange rates used for purchase order (PO) conversions and financial calculations. It maintains historical exchange rate data to ensure accurate currency conversions for international transactions."""
po_expense_reason_codes,"""This table maintains a list of standardized reason codes used to categorize and track purchase order expenses. It serves as a lookup table for expense justifications and reporting purposes."""
po_invoices,"""This table stores purchase order invoice records, tracking billing information and payment details for vendor purchases. It likely contains invoice numbers, amounts, dates, and payment status for accounting purposes."""
po_item_receivers,"""This table tracks received items against purchase orders, recording delivery details and quantities. It likely serves as a receipt log for incoming inventory items, documenting when and how much of each ordered item was received."""
po_links,"""This table stores links between purchase orders and related documents or resources. Based on the name 'po_links', it likely serves as a reference table to maintain connections between purchase orders and their associated files, URLs, or external systems."""
po_locations,"""This table stores physical locations or addresses associated with purchase orders (POs). It likely contains address details, coordinates, or other location-specific information used for shipping, receiving, or billing purposes."""
po_message_mentions,"""This table tracks message mentions or notifications within a system, likely storing references to when users are tagged or mentioned in messages. Based on the name 'po_' prefix, it's probably part of a messaging or notification system."""
po_message_users,"""This table manages user-specific message settings and preferences for a messaging system. It likely tracks which users are involved in or have access to particular messages, possibly storing attributes like read status or notification preferences."""
po_messages,"""This table stores message translations and language strings used for internationalization (i18/n) in the application. It likely contains message identifiers, translated text content, and language codes for different locales."""
po_notifications,"""This table stores notifications and alerts related to purchase orders (POs) in the system. It likely tracks important updates, status changes, and communication events regarding purchase orders."""
po_notifications_documents,"""This table stores documents and notifications related to purchase orders (POs). It likely contains document references, notification content, and tracking information for PO-related communications and attachments."""
po_notifications_users,"""This table manages the association between users and purchase order (PO) notifications, tracking which users should receive specific PO-related alerts or updates. It likely serves as a notification preferences or subscription table for purchase order communications."""
po_payment_options,"""This table stores available payment methods and options that can be used for purchase orders. It likely contains payment types, processing configurations, and status indicators for different payment options accepted by the system."""
po_procurements,"""This table tracks procurement or purchase order records for an organization's purchasing activities. It likely stores details about purchase requests, vendor information, and order statuses."""
po_report_issues,"""This table tracks and stores issues or problems identified during purchase order (PO) report processing. It likely serves as a logging mechanism to document errors, discrepancies, or concerns found in PO reports."""
po_request_approvers,"""This table manages the approval chain configuration for purchase order requests, storing information about who can approve specific PO requests. It likely contains approver details, approval levels, and authorization settings for the purchase order workflow system."""
po_request_item_approvers,"""This table manages approval assignments and workflows for individual purchase order request items. It tracks who needs to approve specific line items within a purchase order request, likely connecting to po_request_items and user/approver tables."""
po_request_item_comments,"""This table stores comments and notes associated with individual purchase order request items. It likely serves as a communication log or documentation system for specific line items within purchase order requests."""
po_request_items,"""This table stores individual line items or products within purchase order requests, including details like quantity, price, and item specifications. It likely connects to a parent purchase_orders or po_requests table to track which items belong to which purchase order."""
po_requests,"""This table stores purchase order (PO) requests and their associated details. It likely contains information such as PO numbers, requested items, amounts, and approval statuses."""
po_rfe_items,"""This table stores line items or products associated with Purchase Order (PO) Request for Exception (RFE) documents. It likely contains details such as item descriptions, quantities, costs, and other specifications needed for procurement exception requests."""
po_rfo_details,"""This table stores details related to Purchase Order (PO) and Ready For Order (RFO) information. It appears to be a standalone table tracking specific PO and RFO attributes without direct relationships to other tables."""
po_rfo_recurring_dates,"""This table stores recurring dates for purchase orders (PO) and ready-for-operations (RFO) events. It likely manages scheduling and timing information for recurring purchase orders or operational readiness checks."""
po_rfo_recurrings,"""This table manages recurring purchase orders or recurring request for orders (RFO) data. It likely stores information about regularly scheduled or repeating purchase orders including frequency, status, and related details."""
po_security_questions,"""This table stores security questions and answers used for account recovery and verification purposes. It likely contains predefined security questions or user-selected questions along with their corresponding answers."""
po_supplier_comments,"""This table stores comments and notes related to suppliers in a purchase order (PO) system. While it currently has no direct relationships, it likely contains reference information about supplier interactions, feedback, or important notes for procurement staff."""
po_supplier_contacts,"""This table stores contact information for suppliers' representatives and key personnel associated with purchase orders. It likely includes details such as names, phone numbers, email addresses, and roles of supplier contacts."""
po_supplier_taxes,"""This table stores tax-related information and calculations for supplier purchase orders. It likely tracks tax rates, amounts, and other tax-specific details applied to supplier transactions."""
po_suppliers,"""This table stores information about suppliers/vendors who provide goods or services for purchase orders (POs). It likely contains supplier details such as company names, contact information, and business credentials."""
po_taxes,"""This table stores tax-related information for purchase orders (POs). It likely contains tax rates, amounts, and calculations applied to purchase transactions."""
portioning_packaging,"""This table stores information about different portioning and packaging options available for products. It connects to language-specific descriptions through portioning_packaging_lang and links to products to specify their packaging configurations."""
portioning_packaging_lang,"""This table stores language-specific translations and localized content for portioning and packaging information. It connects to the main portioning_packaging table through the portioning_packaging_id foreign key, enabling multilingual support for packaging details and instructions."""
portioning_speed_group,"""This table categorizes products based on their portioning or processing speed capabilities. It serves as a reference table for grouping products with similar speed characteristics, linking to product details and language-specific descriptions through portioning_speed_group_lang."""
portioning_speed_group_lang,"""This table stores language-specific translations and localized content for portioning speed groups. It connects to the portioning_speed_group table through portioning_speed_group_id, enabling multilingual support for speed group descriptions and labels."""
portioning_workstation,"""This table stores information about physical workstations used for portioning or dividing materials into smaller quantities. It maintains details about individual portioning stations and connects to portioning_workstation_activity to track specific activities performed at each station."""
portioning_workstation_activity,"""This table tracks activities and operations performed at portioning workstations, recording when and what tasks are executed. It connects portioning workstations to specific tasks through station_id and task_id relationships, enabling monitoring of workstation productivity and task completion."""
predicted_sales_forecast,"""This table stores predicted sales forecast data, likely generated through forecasting models or algorithms. It contains projected sales figures and related metrics to help with business planning and decision-making."""
prepbasket_buffer,"""This table tracks preparation and buffering status for items being picked/packed from orders. It serves as an intermediary table connecting orders, products, and route information to manage the preparation workflow. The table helps coordinate which items need to be prepared and buffered for specific delivery routes."""
prepbasket_buffer_issue_202410281248,"""This appears to be a temporary buffer/staging table created on October 28, 2024, at 12:48 to handle data processing for PrepBasket-related issues. Based on the naming convention, it likely serves as a temporary storage space for troubleshooting or data migration purposes."""
price_scraper_data,"""This table stores scraped price data collected from various sources, tracking historical price changes and current prices. It connects to price_scraper_list through psd_psl_id, which defines what items are being tracked for price monitoring."""
price_scraper_list,"""This table maintains a list of products that need price monitoring through web scraping. It connects to price_scraper_data to store the actual scraped prices and links to the products table for product details. The table serves as a configuration list defining which products should be tracked for price changes."""
printers,"""This table stores information about printers including their specifications, status, and location details. It serves as a standalone reference for tracking and managing printer assets within an organization."""
processes,"""This table tracks running processes and their system-level attributes within the application or infrastructure. It stores process-specific information such as process IDs, states, start times, and resource usage metrics."""
productCategoriesLang,"""This table stores multilingual translations of product category names and descriptions. It likely serves as a localization table to display product category information in different languages, though specific relationships are not defined."""
productSubCategories,"""This table maintains a list of product subcategories used to organize items within the main product catalog. It connects to disabled_subcategories table through subcategory_id, allowing tracking of which subcategories are currently disabled or inactive."""
productSubCategoriesLang,"""This table stores multilingual translations and descriptions for product subcategories in different languages. It likely serves as a localization table for product subcategory names and details, and should connect to a main product subcategories table through a subcategory ID and language code combination."""
productSubSubCategories,"""This table stores the lowest level (third-tier) of product categorization, representing specific sub-subcategories of products. It likely connects to a parent productSubCategories table, enabling a detailed three-level product classification hierarchy."""
productSubSubCategoriesLang,"""This table stores multilingual translations for product sub-subcategories, likely containing names and descriptions in different languages. It appears to be part of a product categorization hierarchy, serving as a localization table for the lowest level of product classification."""
product_attributes,"""This table stores specific attributes or characteristics of products in the catalog, such as size, color, or material. It connects to the main products table through product_id and supports multilingual attribute data through the product_attributes_lang table."""
product_attributes_lang,"""This table stores localized translations of product attribute names and descriptions in different languages. It connects to the product_attributes table through the product_attribute_id field, enabling multilingual support for product specifications and characteristics."""
product_availability_stats,"""This table tracks statistical data about product availability and stock levels over time. It likely stores metrics such as in-stock rates, stockout frequencies, and inventory performance indicators for analytical purposes."""
product_categories,"""This table maintains a hierarchical list of product categories used to organize and classify items in the product catalog. It likely serves as a reference table for products and enables efficient product browsing and filtering."""
product_delivery_days,"""This table tracks the delivery timeframes for each product in the catalog, specifying how many days it takes to deliver specific items. It connects to the products table through the product_id foreign key, enabling accurate delivery estimates for each product listing."""
product_discount_reasons,"""This table stores valid reasons or justifications for applying discounts to products in the system. It serves as a master reference table for discount reasons, with translations managed through the product_discount_reasonsLang table via the product_discount_reason_id relationship."""
product_discount_reasonsLang,"""This table stores multilingual translations for product discount reason descriptions and labels. It connects to the product_discount_reasons table through product_discount_reason_id, enabling localized content for different discount reasons across various languages."""
product_group_relations,"""This table manages hierarchical relationships between products, establishing parent-child connections within the product catalog. It enables the creation of product groupings or bundles by linking two products together, where one product (parent_id) can be associated with another product (child_id), both referencing the products table."""
product_icons,"""This table stores icon assets and visual identifiers associated with products in the system. It likely contains image paths, icon types, and other visual metadata used for displaying product icons throughout the application."""
product_iconsLang,"""This table likely stores language-specific icon information or translations for product icons in a multilingual system. It appears to manage localized icon-related content for products, though without explicit relationships defined."""
product_icons_rel,"""This table appears to manage relationships between products and their associated icons or visual representations. It likely serves as a junction/mapping table to connect product records with their corresponding icon assets."""
product_images,"""This table stores image files and metadata associated with product listings. It likely contains image URLs, file paths, or binary data of product photos along with related attributes like image dimensions and upload dates."""
product_ingredients,"""This table stores ingredient information for products, tracking what materials or components are used in each product's composition. It appears to be a standalone reference table without direct relationships to other tables, though it likely connects to a products table in practice."""
product_ingredientsLang,"""This table stores ingredient information in multiple languages for products, likely serving as a translation mapping table. It appears to contain ingredient details and descriptions in different languages, enabling multilingual product information display."""
product_ingredients_rel,"""This table manages the relationship between products and their ingredients, serving as a junction/mapping table. It likely connects a products table with an ingredients table to establish which ingredients are used in each product."""
product_lot_expire_stats,"""This table tracks statistical data about product lot expiration dates and related metrics. It likely stores aggregated information about product lots, their expiration patterns, and potentially wastage or inventory management data."""
product_refunds,"""This table tracks product refund transactions and their associated details. It likely stores information such as refund amounts, dates, reasons, and refund status for customer returns or reimbursements."""
product_sales,"""Records individual product sale transactions, tracking quantities, dates, and sale amounts. Links to the products table to reference product details and to the users table to track which user created each sale record."""
product_stats,"""This table tracks statistical metrics and performance data for individual products in the catalog. It connects to the products table through the product_id foreign key, enabling analysis of product-level metrics and trends."""
product_tags,"""This table manages tags or labels associated with products in the system. Tags are typically used for product categorization, filtering, and search functionality."""
product_tagsLang,"""This table stores language-specific variations of product tags, likely containing translations or localized versions of product tag names. Based on the name, it appears to be a supporting table for product tags, enabling multi-language support for an e-commerce or product management system."""
product_tags_rel,"""This table manages the relationship between products and their associated tags, serving as a junction/mapping table. It enables many-to-many relationships between products and tags, allowing each product to have multiple tags and each tag to be applied to multiple products."""
product_user_ratings,"""This table stores product ratings and reviews submitted by users for various products. It likely contains rating scores, review text, and timestamps of when users rated products."""
products,"""The products table serves as the central repository for all product-related information in the system, storing essential details about each product. It acts as a primary reference point, connecting to numerous related tables that handle various aspects like pricing, inventory, attributes, nutritional values, and delivery specifications. The table is fundamental to the e-commerce/marketplace functionality, with extensive relationships to support operations from order processing to product management."""
productsLang,"""This table stores language-specific product information and translations for product details. It connects to the main products table through the product_id field, enabling multilingual product content across the system."""
products_inventory,"""This table tracks product inventory levels and stock-related information for the company's merchandise. It maintains records of available quantities, stock thresholds, and inventory movements."""
products_inventory_scheduled_price_changes,"""This table tracks scheduled price changes for products in the inventory system, including future price adjustments and their effective dates. It helps manage planned pricing updates before they take effect."""
products_nutritional_values,"""This table stores nutritional information and dietary values for products in the catalog. It maintains a direct relationship with the products table through the product_id field, allowing detailed nutritional data to be associated with each product."""
products_nutritional_values_generated_by_ai,"""This table stores AI-generated nutritional information and values for products in the catalog. It maintains a direct relationship with the products table through the product_id field, allowing each product to have its associated nutritional data."""
promo_users_log,"""This table tracks promotional activity and user interactions with marketing campaigns or promotional offers. It serves as an audit log to record when and how users engage with various promotional features."""
prompt_banner_log,"""This table logs the display and interaction history of promotional banners or prompts shown to users. It tracks when banners were displayed, user responses, and effectiveness metrics for marketing or UX analysis."""
pup_kit_requests,"""This table tracks requests for puppy starter kits, likely containing essential supplies for new dog owners. While currently independent, it could potentially link to customer or inventory tables in the future."""
pup_schedule_changes,"""This table tracks modifications and adjustments made to puppy/dog schedules or appointments. It likely stores schedule change history, including timestamps, reasons for changes, and updated schedule details."""
pup_snapshots,"""This table stores point-in-time snapshots of pickup point (PUP) data and their current status. It maintains historical records of droppoint conditions and changes, linking to the droppoints table through droppoint_id."""
purchase_order_documents,"""This table stores documents and files related to purchase orders, such as invoices, receipts, and supporting documentation. It likely contains file metadata, storage locations, and references to the actual document files."""
purchase_order_items,"""This table stores individual line items within purchase orders, tracking details like quantity, price, and product information for each item ordered. It likely connects to a purchase_orders table via a purchase_order_id and to a products table via a product_id."""
purchase_orders,"""This table tracks purchase orders and their associated details such as order dates, amounts, and vendor information. It serves as a record of procurement activities and purchasing transactions within the organization."""
purchasing_automation_delivery_schedule,"""This table manages automated delivery schedules for purchasing operations, storing timing and frequency details for recurring deliveries. It likely tracks when items should be automatically ordered and delivered to maintain inventory levels."""
purchasing_automation_sfids,"""This table stores Salesforce IDs used in purchasing automation processes. It likely serves as a reference table for mapping and tracking Salesforce records within the purchasing automation workflow."""
pusher_apps,"""This table stores configuration and settings for Pusher applications, which are used for real-time messaging and notifications. It likely contains Pusher API credentials, app identifiers, and configuration settings for different messaging channels."""
put_away_history,"""This table tracks the history of inventory put-away operations, recording when and where items were stored in their designated locations. It maintains a record of completed put-away tasks and connects to task_type_inventorycheck table to associate put-away activities with inventory verification processes."""
putaway_zone,"""This table defines storage zones used for organizing putaway operations in a warehouse or storage facility. It helps manage and track where items should be stored during the putaway process."""
question_categories,"""This table maintains a list of categories used to organize and classify questions in surveys. It connects to the questions table by providing category classifications, and links to survey_question_categories to establish category relationships within specific surveys."""
questions,"""This table stores core question data used across the survey/questionnaire system. It serves as a central reference point connecting to multiple related tables including response options, translations, categories, and tier assignments. The questions table acts as the primary source for question content, linking to supplementary data through its ID field."""
questions_lang,"""This table stores language-specific versions or translations of questions from the main questions table. It connects to the questions table through the question_id foreign key, enabling multilingual support for question content."""
r_and_d_log,"""This table tracks research and development activities, experiments, and project logs within an organization. It serves as a record-keeping system for R&D initiatives, documenting progress, findings, and outcomes."""
ratelimit_logs,"""This table tracks rate limiting events and attempts to access API endpoints or services. It logs details about requests that hit rate limits, including timestamps, IP addresses, and endpoint information, helping monitor and enforce usage restrictions."""
rating_feedback_type,"""This table defines the different types of feedback or ratings that can be given in the system (e.g., star ratings, thumbs up/down, numerical scores). It serves as a reference table for the ratings table, connecting through rating_feedback_type_id to specify the format or category of each rating."""
ratings,"""This table stores customer ratings and feedback for specific orders and workflow steps. It connects to orders to track which order was rated, links to rating_feedback_type to categorize the type of feedback given, and relates to ww_steps to identify which step in the workflow was evaluated."""
raw_survey_answer,"""This table stores individual responses from survey participants in their raw, unprocessed form. It captures the direct answers and inputs provided by respondents during survey completion."""
recipeIngredients,"""This table stores the ingredients required for recipes, including quantities and measurement units. It likely serves as a junction table connecting recipes and ingredients tables, enabling many-to-many relationships between recipes and their components."""
recipeIngredientsNotIncluded,"""This table tracks ingredients that should be excluded or omitted from specific recipes. It likely serves as a reference for recipe modifications or dietary restrictions, storing ingredients that are explicitly marked as 'not included' in recipe preparations."""
recipeOrders,"""This table tracks recipe orders and their associated details, likely including order dates, quantities, and status information. It appears to be a standalone table without direct relationships to other tables, suggesting it may be used for basic order tracking or reporting purposes."""
recipe_availability_stats,"""This table tracks statistical data about recipe availability and usage patterns across the system. It likely stores metrics such as recipe view counts, availability status, and access frequency."""
recipe_user_ratings,"""This table stores user ratings and reviews for recipes, capturing user feedback and scoring data. It likely connects to a recipes table and a users table through foreign keys to track who rated which recipes."""
recipes,"""This table stores cooking recipes, including ingredients, instructions, preparation times, and serving sizes. It serves as a standalone recipe database for storing and retrieving cooking instructions."""
recipesLang,"""This table appears to store language-specific content or translations for recipes, likely containing recipe names, descriptions, or instructions in different languages. It may serve as a localization table to support multiple language versions of recipe content."""
referral_program_logs,"""This table tracks activities and events related to the referral program, logging actions such as referral submissions, reward distributions, and program status changes. It serves as an audit trail for referral-related transactions and program performance monitoring."""
regions,"""This table stores geographical region information used for organizing and categorizing data by location. It typically contains region names and identifiers that can be referenced by other tables for location-based grouping and filtering."""
relays,"""This table stores relay node information for network routing and message forwarding configurations. A relay represents a network intermediary point that helps route traffic between different parts of the system."""
replenishment_history,"""This table tracks the history of inventory replenishment activities, recording when and how stock items were restocked. It maintains a log of quantities added, dates, and potentially who performed the replenishment."""
reports_log,"""Tracks and stores report generation events and their associated metadata in the system. Links to the users table through staff_id to identify which staff member generated each report."""
request_comments,"""This table stores comments and feedback associated with requests in the system. While no direct relationships are currently defined, it likely connects to a requests table to track discussions, notes, or communications related to specific requests."""
requested_changes,"""This table tracks change requests made within the system, storing details about requested modifications or updates. Based on the name, it likely serves as a log or audit trail for tracking change management processes."""
response_options,"""This table stores response selections made from available options, linking to the options table through option_id. It tracks which options were chosen in various contexts or responses."""
rights,"""This table manages access control and permission settings within the system. It likely stores different types of rights or privileges that can be assigned to users or roles, though no direct relationships are currently established."""
roles,"""This table stores role definitions and hierarchies within the system, managing access control and permissions. It connects to various permission log tables to track changes in role assignments, permissions, and hierarchies, while also linking to user_roles for current role assignments and temp_departments for organizational structure. The roles table serves as a central reference point for the application's role-based access control (RBAC) system."""
roles_lang,"""This table stores language-specific translations and content for role-related information, likely containing role names and descriptions in different languages. Based on the name, it appears to be a localization table that complements a main 'roles' table."""
root_employee_role_request,"""This table manages employee role change requests and their associated task type configurations. It connects employee records from the users table with specific task type settings from task_type_defaults, enabling role-based workflow management."""
root_message,"""This table stores direct messages or communications between users in the system. It maintains a record of message exchanges by linking both the sender and recipient to the users table through their respective IDs (sender_id and recipient_id)."""
root_resources,"""This table stores fundamental system resources and their core configurations at the root level. It serves as a standalone reference table for managing base-level resources without direct relationships to other tables."""
root_scheduling,"""This table manages root scheduling data for employee work assignments and rotations. It connects to employee_daily_stats to track performance metrics for each schedule, and links to the users table through employee_id to identify assigned personnel."""
route_details,"""This table stores detailed information about specific route assignments and their execution, connecting routes with assigned drivers and droppoints. It serves as a junction table linking the routes, droppoints, and driver (user) tables together to track route operations and delivery details."""
routes,"""This table stores core information about transportation routes, serving as a primary reference for route identification and basic attributes. It connects to route_details through the route_id field, where more specific information about each route segment or characteristic is stored."""
routing_jobs,"""This table manages routing job records that connect orders, drop instances, and routing simulations together. It serves as a central point for tracking routing operations and their associated simulation data. The table links to multiple related entities including drop instances, orders, routing simulation routes, and stops, making it a key component in the routing system's data structure."""
routing_simulation_routes,"""This table stores individual routes generated during routing simulations, containing path details and route metrics. It connects to routing_jobs to track specific job assignments and to routing_simulations to associate routes with their parent simulation run."""
routing_simulation_stops,"""This table stores individual stops/locations that are part of routing simulations, with each stop associated with a specific routing job. It connects to the routing_jobs table through the routing_job_id field, allowing tracking of which stops belong to which simulation job."""
routing_simulations,"""This table stores simulation data for routing calculations and their configurations. It serves as the parent table for routing_jobs and routing_simulation_routes, connecting to them via routing_simulation_id to track different aspects of each simulation run."""
rpc_group_activity,"""This table tracks activities and operations performed on groups of shipments or pallets within the RPC (Returnable Packaging Container) system. It connects shipment requests, supplier pallet deliveries, and tote formats while maintaining records of which users performed specific actions and which suppliers were involved."""
rpc_invoices,"""This table stores repair and maintenance invoice header information, tracking transactions between the company and suppliers for repair/maintenance services. It connects to suppliers for vendor details, users for tracking who last modified the invoice, and links to rpc_invoices_detail for individual line items within each invoice."""
rpc_invoices_detail,"""This table stores detailed line items and specifications for RPC (Reusable Plastic Container) invoices. It connects to the main rpc_invoices table for invoice header information and links to tote_formats table to reference specific RPC container types and their configurations."""
rpc_pallet_quantity,"""This table tracks the quantity of pallets for RPC (Reusable Plastic Container) inventory management. It likely stores count or volume data for tracking RPC pallets in a warehouse or logistics system."""
rpc_request_orders,"""This table tracks and stores RPC (Remote Procedure Call) request orders, likely containing details about API or service calls made within the system. It appears to be a standalone table for monitoring and logging RPC transactions."""
rpc_shipment_request,"""This table manages shipment requests within an RPC (Reusable Plastic Container) system, tracking details like supplier information, tote formats, and requesting users. It connects to rpc_group_activity for tracking shipment activities, suppliers for vendor details, tote_formats for container specifications, and users for request attribution."""
rpc_suppliers_settings,"""This table stores configuration settings and preferences for suppliers in the RPC (Reusable Plastic Container) system. It maintains relationships with suppliers, tote formats, and tracks user actions through created_by and updated_by fields, enabling supplier-specific customization of RPC handling processes."""
sales_forecast,"""This table stores sales forecast data, including predicted revenue, quantities, and future sales projections. It's used for business planning and revenue prediction purposes."""
sales_stats_aggregated,"""This table contains aggregated sales statistics and metrics, likely computed from raw sales data. It serves as a performance summary table for reporting and analysis purposes."""
saved_query,"""This table stores saved database queries or search criteria that can be reused later. It likely contains query parameters, execution settings, and metadata about when the query was saved and by whom."""
scheduled_event_coordinators,"""This table manages the assignments of coordinators (users) to specific scheduled events, creating a many-to-many relationship between users and events. It serves as a junction table linking users who are designated as coordinators to the events they are responsible for managing. The table connects to the users table to identify coordinators and to the scheduled_events table to specify which events they're assigned to."""
scheduled_event_drafts,"""This table stores draft versions of scheduled events before they are finalized and published. It serves as a staging area for event details and modifications, linking to the scheduled_events table where approved events are stored via the scheduled_event_drafts_id."""
scheduled_events,"""This table manages scheduled event instances, storing details about when and where community events will take place. It serves as a central hub connecting various event-related components like email templates, attachments, guests, and coordinators, while also linking to institution and event type information."""
scheduled_events_lang,"""This table stores language-specific translations and localized content for scheduled events. It connects to the main scheduled_events table through the scheduled_events_id foreign key, enabling multilingual support for event details."""
scheduled_product_price_change,"""This table tracks scheduled price changes for products, storing when and how product prices should be modified in the future. It likely includes details such as the product identifier, the new price, and the scheduled date/time for the price change to take effect."""
scheduled_sfid_logs,"""This table tracks activity logs and changes made to scheduled SFID records. It maintains an audit trail by recording who made changes through the scheduled_sfid_log_created_by field linking to users, and what specific scheduled SFID was modified via the scheduled_sfid_id relationship."""
scheduled_sfids,"""This table manages scheduled Salesforce IDs (SFIDs) associated with products in the system. It tracks which SFIDs are scheduled for use, linking to products and maintaining a record of who created each entry, while connecting to scheduled_sfid_logs for detailed activity tracking."""
sfid_challenges,"""This table tracks challenges or disputes raised against supplier forecast orders, recording who initiated the challenge and who responded. It connects to supplier_forecast_orders for the disputed order details and links to the users table twice - once for the challenger and once for the responder."""
sfid_quantity_change_log,"""This table tracks changes made to quantity values in supplier forecast orders, recording who made the change and when. It maintains an audit trail by linking to the supplier_forecast_orders table for the affected forecast and to the users table to identify who made the modification."""
sfid_scheduled_price_changes,"""This table tracks scheduled price changes for products or services with their effective dates and new pricing details. It serves as a record of planned price adjustments, enabling automated price updates at specified times."""
signup_contents,"""This table stores content and configuration data used in user signup flows and registration pages. It likely contains text, images, and settings that determine how signup forms and related UI elements are displayed to users."""
skill_types,"""This table categorizes different types of vehicle-related skills or competencies. It serves as a reference table for both daily_vehicle_skill and vehicle_skills tables, providing standardized skill type classifications through the skill_type_id relationship."""
sku_dedctn_type,"""This table stores different types of SKU (Stock Keeping Unit) deductions or adjustments that can be applied to inventory items. It likely serves as a reference table for categorizing various reasons or methods for reducing SKU quantities."""
slot_type,"""This table defines different types or categories of slots/positions that can exist in the system. It serves as a lookup or reference table to standardize slot classifications across the application."""
slow_routing_day,"""This table tracks days marked as having slow routing or delivery operations, helping identify problematic periods in the logistics system. It maintains a record of who flagged these slow days through its relationship with the users table via the created_by field."""
sms_tickets,"""This table stores SMS ticket-related data, likely including message content, status, and delivery information. It appears to be a standalone table for tracking SMS-based ticketing or notification systems."""
spamtrap,"""This table stores email addresses and related data identified as spam traps or honeypot addresses used to detect and monitor spam activity. A spamtrap is a fake email address that helps identify spammers and maintain email security."""
split_route_reasons,"""This table stores reasons why delivery routes might be split into multiple segments. It likely contains a list of standardized explanations for route divisions, helping track and categorize why single routes are broken into smaller parts."""
sqlmapfile,"""This table appears to store SQL map file data, likely used for database schema mappings or SQL query configurations. Based on the name, it may be used to store mapping files for SQLMap, a database security testing tool."""
stat_holiday,"""This table stores statutory holiday records and their associated details for payroll and time tracking purposes. It connects to manual_hours for holiday pay calculations and links to the users table in multiple ways to track who created, applied, and reverted holiday entries."""
states,"""This table stores basic information about states or provinces, typically including their names, abbreviations, and other geographical details. It serves as a reference table for standardizing state/province data across the system."""
stats_page_requested,"""This table tracks page request statistics and analytics for website traffic monitoring. It likely stores data about which pages were accessed, when they were requested, and potentially other metrics like response times or user agents."""
storage_units,"""This table manages information about storage units or storage spaces, including their size, location, and availability status. It likely tracks individual storage units within a storage facility or warehouse system."""
stories,"""This table stores story content and related metadata such as titles, authors, and publication dates. It appears to be a standalone table without direct relationships to other tables in the database."""
submissions_logs,"""This table tracks the history and status of product submissions, recording changes and actions taken during the submission process. It connects to products being submitted, users who created the entries, and links to detailed submission steps through related tables. The logs provide an audit trail of the submission workflow and its progression."""
submissions_steps,"""This table tracks individual steps or stages within a submission process, connecting to submissions_logs for overall submission tracking and users for step ownership. Each record represents a specific action or milestone in the submission workflow, maintaining the sequence and status of steps taken."""
subscribers_ltv_logs_2013,"""This table logs lifetime value (LTV) metrics and related data for subscribers from 2013. It appears to be a historical tracking table focused on measuring and analyzing subscriber value during that specific year."""
subscribers_ltv_logs_2014,"""This table logs lifetime value (LTV) metrics and related data for subscribers from 2014. It appears to be a historical tracking table focused on measuring and analyzing subscriber value during that specific year."""
subscribers_ltv_logs_2015,"""This table logs lifetime value (LTV) metrics and related data for subscribers from 2015. It appears to be a historical tracking table focused on measuring and analyzing subscriber value during that specific year."""
subscribers_ltv_logs_2016,"""This table logs lifetime value (LTV) metrics and related data for subscribers during 2016. It appears to be a historical tracking table focused on measuring and analyzing subscriber value over time."""
subscribers_ltv_logs_2017,"""This table logs lifetime value (LTV) metrics and related data for subscribers during 2017. It appears to be a historical tracking table focused on measuring and analyzing subscriber value over time."""
subscribers_ltv_logs_2018,"""This table logs lifetime value (LTV) metrics and related data for subscribers during 2018. It appears to be a historical tracking table focused on measuring and analyzing subscriber value over time."""
subscribers_ltv_logs_2019,"""This table logs lifetime value (LTV) metrics and related data for subscribers during 2019. It appears to be a historical tracking table focused on measuring and analyzing subscriber value over time."""
subscribers_ltv_logs_2020,"""This table logs lifetime value (LTV) calculations and metrics for subscribers during the year 2020. It tracks historical subscriber value data, likely including revenue, engagement, and retention metrics for analysis purposes."""
subscribers_ltv_logs_2021,"""This table tracks lifetime value (LTV) metrics and related data points for subscribers during the year 2021. It likely contains historical logs of subscriber revenue, engagement, and value-related metrics for analysis and reporting purposes."""
subscribers_ltv_logs_2022,"""This table tracks lifetime value (LTV) metrics and related data points for subscribers during the year 2022. It appears to be a logging table that captures historical subscriber value calculations and metrics over time."""
subscribers_ltv_logs_2023,"""This table tracks lifetime value (LTV) metrics and related data points for subscribers during 2023. It logs historical subscriber value calculations and metrics over time, serving as an analytical record for customer value assessment."""
subscribers_ltv_logs_2024,"""This table tracks subscriber lifetime value (LTV) metrics and related data points throughout 2024. It logs historical changes and calculations related to customer value over time, serving as an analytical record for subscriber monetization tracking."""
subscribers_ltv_logs_2025,"""This table tracks subscriber lifetime value (LTV) metrics and related data points for the year 2025. It logs historical changes and calculations of customer value over time, serving as an analytical record for revenue tracking and customer behavior analysis."""
subscription_snapshot,"""This table captures point-in-time snapshots of subscription data, tracking historical changes and states of subscriptions. It serves as an audit and analytics table, storing periodic records of subscription attributes and metrics."""
subscription_state_changes,"""This table tracks changes in subscription states/statuses over time, recording when and how subscriptions transition between different states (e.g., active, cancelled, paused). It serves as an audit log for subscription lifecycle events."""
subscriptions,"""This table manages subscription records and their associated details for the service. It connects to dropinstance_transfer_users table through subscription_id, tracking which transfers are associated with specific subscriptions."""
subscriptions_audit_per_day,"""This table tracks daily audit metrics and changes in subscription data, likely storing aggregated statistics or snapshots of subscription states for each day. It serves as a historical record for monitoring subscription trends and analyzing changes over time."""
subscriptions_changes,"""This table tracks changes and updates made to subscription records over time, including modifications to status, plan types, and pricing. It serves as an audit log to maintain a historical record of subscription-related changes."""
subscriptions_logs,"""This table tracks historical changes and events related to subscription activities and status updates. It serves as an audit log to maintain a record of subscription-related actions, modifications, and system events."""
subsubcategory_availability_stats,"""This table tracks availability statistics at the subsubcategory level, likely storing metrics like inventory levels or service availability. It appears to be an analytics or reporting table that aggregates availability data at a granular category level."""
summer_contest_free_participant,"""This table tracks participants who registered for free entry into summer contests. It stores basic participant information for those who didn't pay an entry fee, helping organizers manage free registrations separately from paid entries."""
summer_contest_opt_in,"""This table tracks which users have opted in to participate in summer contests or promotional events. It serves as a simple flag/record system to manage contest participation eligibility."""
summer_contest_winners,"""This table maintains records of winners from summer contests, storing participant details and their winning entries. It appears to be a standalone table without direct relationships to other tables in the database."""
supervores_capacity,"""This table stores capacity-related metrics and measurements for supervores (specialized storage units). It tracks storage capabilities, volume limits, and operational parameters for these containers."""
supervores_incentive_log,"""This table logs incentive-related activities and rewards for supervisors/managers (supervores). It tracks when and what incentives were awarded, likely including metrics, achievements, or milestones that triggered the rewards."""
supplier_additional_warehouses,"""This table stores additional warehouse locations associated with suppliers beyond their primary warehouse. It likely contains warehouse addresses, contact details, and operational information for secondary or auxiliary storage facilities used by suppliers."""
supplier_certifications,"""This table stores certification records and credentials held by suppliers in the system. It serves as a master list of available certifications and links to supplier_certifications_rl table, which maps specific certifications to individual suppliers."""
supplier_certifications_rl,"""This table manages the relationship between suppliers and their certifications, serving as a junction/linking table. It connects supplier records with their associated certification details through supplier_id and supplier_certification_id foreign keys."""
supplier_confirmation_and_shipping_dates,"""This table tracks supplier confirmations and shipping dates for orders or purchases. It likely stores when suppliers acknowledge orders and commit to delivery dates, along with actual shipping timestamps."""
supplier_confirmation_and_shipping_dates_patterns,"""This table tracks patterns and trends in supplier confirmation times and shipping date accuracy by supplier. It stores historical data about how suppliers typically perform in terms of order confirmation and delivery timing, linking to the suppliers table via supplier_id to enable supplier performance analysis."""
supplier_contacts,"""This table maintains contact information for supplier representatives and key personnel. It connects to the suppliers table through the supplier_id foreign key, allowing multiple contacts to be associated with a single supplier."""
supplier_delivery_days,"""This table tracks the specific days when suppliers can make deliveries to the business. It connects to the suppliers table through the supplier_id field, enabling the system to manage delivery schedules for each supplier."""
supplier_documents,"""This table stores documents and files associated with suppliers, such as contracts, certifications, and compliance paperwork. It likely serves as a document management system for supplier-related files."""
supplier_forecast_order_reception_errors,"""This table tracks errors and issues that occur during the reception of supplier forecast orders. It maintains a record of problems encountered when processing forecast orders, linking to the original supplier_forecast_orders table through supplier_forecast_orders_id and tracking the user who reported or created the error entry through creator_id."""
supplier_forecast_orders,"""This table manages forecast orders from suppliers, tracking product quantities and delivery expectations. It connects to multiple related tables for handling challenges, quantity changes, reception errors, product details, and task type portioning. The table serves as a central point for supplier order forecasting and monitoring."""
supplier_forecast_orders_files,"""This table stores file information related to supplier forecast orders, likely containing uploaded documents or data files. It appears to track and manage files associated with supplier forecasting and ordering processes."""
supplier_forecast_orders_images,"""This table stores image files related to supplier forecast orders, likely containing visual documentation or attachments. While currently not directly linked to other tables, it presumably connects to a main supplier_forecast_orders table to store supplementary visual data."""
supplier_images,"""This table stores image files and metadata associated with supplier-related content. It likely contains image paths, file names, and other attributes for managing supplier visual assets."""
supplier_invoices,"""This table stores invoice records and billing information from suppliers and vendors. It tracks payment details, invoice amounts, and transaction dates for accounts payable purposes."""
supplier_notifications,"""This table manages notifications and alerts sent to or received from suppliers in the system. It likely stores message content, timestamps, notification status, and supplier-specific communication preferences."""
supplier_notifications_logs,"""This table maintains a log of all notifications sent to suppliers, tracking communication history and delivery status. It serves as an audit trail for supplier-related communications and notifications."""
supplier_pallet_per_delivery,"""This table tracks the number of pallets received per supplier delivery. It serves as a reference for supplier delivery metrics and connects to rpc_group_activity to associate pallet counts with specific group activities or operations."""
supplier_propositions,"""This table stores supplier-specific propositions, offers, or value statements that suppliers present to the business. It likely contains details about proposed services, pricing, and unique selling points from various suppliers."""
supplier_users,"""This table manages the association between users and suppliers, serving as a junction/mapping table to establish which users are connected to which supplier organizations. It enables many-to-many relationships between users and suppliers, allowing a user to be associated with multiple suppliers and a supplier to have multiple users."""
supplier_vacations,"""This table tracks vacation or time-off periods for suppliers in the system. It connects to the suppliers table to identify which supplier is on vacation and links to users table to track who created the vacation record."""
suppliers,"""This table stores core information about suppliers/vendors in the system. It serves as the central reference point for supplier-related data, connecting to multiple related tables that manage supplier activities, settings, certifications, contacts, delivery schedules, and invoices. The table acts as the primary source for supplier management, with its supplier_id being referenced across various operational and administrative functions."""
suppliersLang,"""This table stores language-specific supplier information and translations for multilingual support. It connects to the main suppliers table through the supplier_id foreign key, enabling localized supplier details in different languages."""
suppliers_certifications,"""This table tracks certifications and compliance documentation held by suppliers. It likely stores certification types, expiration dates, and validation status for vendor qualifications and regulatory requirements."""
suppliers_rpc,"""This table stores Remote Procedure Call (RPC) configurations and settings associated with suppliers. It connects to the suppliers table through the supplier_id foreign key, enabling integration of supplier-specific RPC endpoints and communication protocols."""
suppliers_shipment_comments,"""This table stores comments and notes related to supplier shipments and deliveries. While currently not directly linked to other tables, it likely serves as a documentation system for tracking supplier shipment feedback and communication."""
support_issue_comments,"""This table stores comments and updates made by support staff on customer support issues. It connects to the support_issues table to track which issue each comment belongs to, and links to the users table to identify which staff member made the comment."""
support_issue_types,"""This table maintains a list of standardized issue categories used to classify customer support tickets and inquiries. It serves as a reference table for organizing and categorizing support-related data."""
support_issue_typesLang,"""This table stores localized/translated versions of support issue types and categories in different languages. It likely serves as a language-specific reference table for support ticket classification and categorization."""
support_issues,"""This table tracks customer support tickets and issues reported by users. It stores essential ticket details like status, priority, and description, while linking to user profiles through user_id and enabling comments through the support_issue_comments relationship."""
survey,"""This table stores core information about individual surveys, such as titles, creation dates, and status. It connects to survey_question_categories through the survey_id field, allowing surveys to be organized into different question categories or sections."""
survey_answers,"""This table stores responses and answers collected from surveys or questionnaires. It likely contains individual answer records with corresponding question identifiers and respondent information."""
survey_categories,"""This table stores categories or topics used to organize survey questions and responses. It serves as a classification system to group related survey items together for better organization and analysis."""
survey_categoriesLang,"""This table stores language-specific translations and content for survey categories. Based on the name, it likely contains localized versions of category names, descriptions, or labels used in surveys, enabling multi-language support for survey systems."""
survey_question_categories,"""This table maps survey questions to their respective categories, creating a hierarchical organization of questions within surveys. It serves as a junction table connecting survey questions to their categories, enabling efficient categorization and grouping of related questions within a survey."""
survey_questions,"""This table stores survey questions used across different questionnaires and forms within the system. It serves as a central repository for question content, types, and configuration settings."""
survey_questionsLang,"""This table stores language-specific versions of survey questions, likely containing translations of question text and related content. Based on the name, it probably connects to a main survey_questions table to support multilingual survey functionality."""
survey_responses,"""This table stores individual responses collected from surveys or questionnaires. It captures participant feedback, answers, and submission details in a structured format."""
table_path,"""This table stores file system paths and related metadata for tracking file locations within the system. It appears to be a standalone table for path management and reference."""
task,"""The task table serves as the central repository for all task-related information in the system, storing core task data and metadata. It connects to various task-specific tables (like cleaning, portioning, inventory, etc.) through task_id relationships, allowing different types of tasks to have their specialized attributes while maintaining a common base structure. The table also supports task hierarchies through parent-child relationships and tracks task-related activities across different workstations and processes."""
task_comment,"""This table stores comments and feedback associated with specific tasks in the system. It maintains a direct relationship with the task table through the task_id foreign key, allowing comments to be linked to their respective tasks."""
task_condensing_lots,"""This table tracks condensing tasks where multiple inventory lots are combined into a single location. It manages the consolidation of inventory by linking lots to their new locations through relationships with inventory, location_header, and task_type_condensing tables."""
task_details,"""This table stores detailed information about individual tasks or activities within the system. It captures task-specific attributes such as descriptions, status, deadlines, and other relevant task metadata."""
task_group,"""This table organizes and categorizes groups of related tasks or activities. A task group represents a logical collection of tasks that share common characteristics or objectives."""
task_header,"""This table serves as the main header record for tasks or activities in the system, storing essential task metadata and status information. While currently independent, it appears designed to be a parent table that could link to task details or related records."""
task_help_log,"""This table logs instances where users requested or received help with tasks in the system. It tracks support interactions, assistance details, and timestamps for task-related help requests."""
task_logging,"""This table tracks the hierarchical relationships and logging details between different types of tasks in the system. It maintains connections to task_type_defaults table through both primary and child task type IDs, enabling parent-child task relationship management."""
task_parent_child,"""This table manages hierarchical relationships between tasks by connecting parent tasks to their child tasks. It creates a many-to-many relationship between tasks in the task table, where a task can have multiple parents and multiple children."""
task_speed_week,"""This table tracks weekly speed metrics and performance data for different types of tasks. It connects to task_type_defaults through task_type_defaults_id to reference standard task configurations and benchmarks."""
task_stats,"""This table tracks statistics and performance metrics for individual tasks completed by users. It connects task-specific data to daily employee statistics through employee_daily_stats_id, while linking to specific tasks and users through their respective IDs."""
task_type,"""This table stores different types or categories of tasks that can be assigned or tracked in the system. It serves as a lookup or reference table to standardize task classifications."""
task_type_cleaning,"""This table stores cleaning-specific task type details and configurations for cleaning-related tasks in the system. It connects to the task table through the task_id relationship, providing specialized attributes and settings specific to cleaning operations."""
task_type_condensing,"""This table defines different types of condensing tasks in a manufacturing or processing system. It connects task-specific details with condensing lot information, physical locations, and general task records through its relationships with task_condensing_lots, location_header, and task tables respectively."""
task_type_defaults,"""This table defines default settings and configurations for different types of tasks in the system. It serves as a central reference point for task-related tables, connecting to various entities like employee statistics, training records, task logging, and role assignments through the task_type_id field."""
task_type_general_dc,"""This table stores general task type information and classification data for digital content tasks. It connects to the task table through task_id and tracks who closed/completed tasks by linking to the users table via closed_by."""
task_type_inventory_adjustment,"""This table tracks inventory adjustment tasks and their specific details within the system. It connects adjustment activities to physical inventory lots and maintains the relationship between tasks and inventory movements. The table serves as a bridge between task management, inventory tracking, and adjustment activities."""
task_type_inventorycheck,"""This table manages inventory check tasks and their associated actions like cleaning, discounting, relocation, and expiration tracking. It serves as a central hub connecting various inventory-related activities and actions through relationships with multiple action-specific tables. The table links to user data for tracking task creation and blocking, while also maintaining connections to inventory lots and put-away history."""
task_type_inventorycheck_lot_verification,"""This table tracks lot verification details as part of inventory check tasks, connecting specific lots to their verification activities. It serves as a junction table linking inventory lots, inventory activities, and inventory check tasks together, enabling tracking of which lots were verified during specific inventory checks."""
task_type_it,"""This table defines different types of IT-related tasks and their specific attributes. It connects to the task table through the task_id relationship, allowing for categorization and specialized handling of IT-specific task requirements."""
task_type_label_printing,"""This table tracks label printing tasks and their configurations within the system. It connects to the task table for core task information and the users table to identify who initiated or managed the printing request."""
task_type_loadbasket,"""This table maps task types to load basket route information, establishing connections between specific tasks and their associated routing details. It serves as a junction table linking task records with load basket routing configurations through foreign key relationships."""
task_type_portioning,"""This table manages portioning tasks for products, linking specific portioning requirements to supplier forecast orders and tasks. It connects product details with their associated portioning locations and specifications, serving as a central reference point for product portioning operations."""
task_type_portioning_location_details,"""This table stores location-specific details for different task type portioning configurations. It extends the task_type_portioning table by adding location-based attributes and settings, connecting through the task_type_portioning_id field."""
task_type_prepbasket,"""This table manages preparation basket task details, tracking basket-specific tasks and their assignments. It connects to the task table for basic task information, users table for tracking who reserved the task, and links to related weight and quality check records through task_type_prepbasket_weight and task_type_qualitycheck tables."""
task_type_prepbasket_weight,"""This table stores weight-related configurations for preparation basket task types. It connects to task_type_prepbasket to define weight parameters for specific prep basket tasks, and links to task_type_qualitycheck_weight for quality control weight specifications."""
task_type_prepbaskethelper,"""This table manages the relationships between preparation tasks and their helper/dependent tasks in a basket workflow system. It creates connections between two tasks where one task (helping_task_id) helps prepare for or supports another task (task_id), enabling proper task sequencing and dependencies."""
task_type_prepcart,"""This table manages the association between tasks and shopping carts in a preparation context. It serves as a junction table connecting task types to specific carts through cart_id and task_id foreign keys."""
task_type_quality_portioning,"""This table manages quality assurance relationships between tasks, where one task serves as a quality check for another task. It connects to the task table twice: once for the original task (task_id) and once for the QA task (task_id_to_qa), enabling tracking of quality control workflows."""
task_type_qualitycheck,"""This table stores quality check records for tasks, specifically related to preparation basket operations. It connects quality check data to the main task table and preparation basket details, while also linking to associated quality check issues and weights through its ID."""
task_type_qualitycheck_issue,"""This table tracks quality control issues identified during quality check tasks, linking specific problems to inventory lots and quality check records. It serves as a bridge between the quality check process and inventory management, allowing issues to be traced back to specific lots and quality check instances."""
task_type_qualitycheck_weight,"""This table manages the weight relationships between quality check tasks and prep basket tasks. It serves as a junction table connecting task_type_qualitycheck and task_type_prepbasket_weight tables, allowing for weighted associations between quality checks and prep basket configurations."""
task_type_reception,"""This table manages reception-specific task type configurations and settings for handling incoming tasks. It connects to the task table through the task_id relationship, allowing specific reception-related parameters to be associated with general tasks."""
task_type_role,"""This table defines the roles associated with different task types in the system. It connects to task_type_defaults through task_type_defaults_id, establishing default settings and permissions for each task type role."""
task_type_role_employee_priority,"""This table maps task types to specific employees and their priority levels for handling those tasks. It connects task type default settings through task_type_defaults_id and links to individual employees through the employee_id field, enabling customized task assignment rules."""
task_type_spot_check,"""This table stores spot check task details and results for quality control inspections. It connects to the task table for basic task information, while linking to additional_lots_found and task_type_spot_check_lots tables to track lot-specific inspection data and findings."""
task_type_spot_check_lots,"""This table manages the lot-specific details associated with spot check tasks, connecting individual lots to their corresponding spot check task types. It links to the task_type_spot_check table through the task_type_spot_check_id field, enabling tracking of which lots are included in specific spot check tasks."""
task_type_vehiclearrival,"""This table stores specific details about vehicle arrival tasks within the system. It extends the base task table by providing additional data points related to vehicle arrival events, and connects to the main task table through the task_id foreign key."""
task_user_group,"""This table manages the association between tasks and user groups, enabling group-based task assignments and permissions. It serves as a junction table to establish many-to-many relationships between tasks and groups of users."""
tax_receipts,"""Stores tax receipt records and documentation for financial transactions made by users. Links to the users table through user_id to associate receipts with specific account holders."""
tbl_migration,"""This table tracks database migration history and version control, storing information about schema changes and updates that have been applied to the database. It helps maintain database consistency and allows tracking of which migrations have been executed."""
team_leaders,"""This table stores information about team leaders within the organization, including their identification and leadership details. It appears to be a standalone table without direct relationships to other tables in the database."""
team_members,"""This table stores information about team members within an organization, including their personal details and roles. It serves as a standalone reference for employee/member data management."""
temp_departments,"""This table stores temporary department information and hierarchical structures within an organization. It serves as a staging or temporary storage area for department data, connecting to multiple related tables including shifts, teams, permissions, roles, and language-specific department details through the department_id field."""
temp_departments_lang,"""This table stores language-specific translations and localized content for department information. It connects to the temp_departments table through the department_id field, enabling multilingual support for department names and descriptions."""
temp_employee_access_code,"""This temporary table stores access codes and credentials for provisional employee access to systems. It's designed to manage temporary or probationary employee authentication without impacting the permanent employee records."""
temp_employees,"""This table maintains records of temporary or contract employees within the organization. It connects to the users table through the user_id field, allowing access to core user information for temporary staff members."""
temporary_customizable_base_basket_table_helper,"""This temporary helper table stores customizable base basket configurations during data processing or migration tasks. It serves as an intermediary storage solution for basket-related operations that require temporary data manipulation."""
ticketActionEmailTemplate,"""This table stores email template configurations used for automated ticket-related actions and notifications. It contains predefined email content, formatting, and variables that can be used when sending communications about ticket updates or status changes."""
ticketActions,"""This table tracks actions and changes made to tickets in the system, such as status updates, assignments, or comments. It serves as an audit log to maintain a history of ticket-related activities."""
ticketActionsTaken,"""This table tracks actions and interventions performed on support tickets, such as status changes, assignments, or responses. It serves as an audit log to maintain a history of all activities taken on tickets."""
ticketReasonActions,"""This table stores predefined actions or responses associated with different ticket reasons or categories in a support system. It likely contains mappings between ticket reasons and their corresponding recommended actions or workflows."""
ticketReasons,"""This table stores standardized reasons or categories for ticket creation in a ticketing system. It likely contains predefined options that users can select when creating tickets, helping with ticket classification and reporting."""
tickets,"""This table stores ticket-related information for tracking customer support requests, issues, or event bookings. It likely contains details such as ticket status, creation date, description, and associated reference numbers."""
tier_questions,"""This table manages the association between questions and their assigned difficulty tiers in the system. It serves as a junction table connecting the questions and tiers tables through their respective IDs, allowing questions to be categorized by difficulty level."""
tiers,"""This table stores different tier levels or categories used to classify content or access levels in the system. It connects to tier_questions table where each tier can have multiple associated questions, enabling tier-specific question management."""
timelog_error_status,"""This table tracks the status and error conditions of time logging operations in the system. It likely stores error codes, status flags, or validation results related to time entry processes."""
timelog_punch_type,"""This table defines the different types of time clock punches that can be recorded in a time tracking system (e.g., clock-in, clock-out, break start, break end). It serves as a reference table for categorizing time entries in related timekeeping tables."""
timelog_report_lock,"""This table manages locking mechanisms for timelog reports to prevent concurrent modifications or access conflicts. It likely tracks when reports are being generated or modified to ensure data consistency and prevent multiple users from simultaneously accessing the same report."""
timelog_settings,"""This table stores configuration settings and preferences related to time logging functionality in the system. It likely contains parameters that control how time entries are recorded, displayed, and processed."""
timelog_timecard_check_in,"""This table tracks employee check-in records for timecard management, storing timestamps and related check-in data. It appears to be a standalone table for basic time tracking functionality."""
timelog_transactions,"""This table records time-based transactions or activities with their corresponding timestamps. It likely stores duration, activity types, and other time-tracking related data for logging and reporting purposes."""
tote_formats,"""This table defines different tote container formats and specifications used in the RPC (Reusable Plastic Container) system. It serves as a reference table for products, shipments, supplier settings, and invoice details by providing standardized tote configurations through the tote_format_id."""
training_stats_prepbasket,"""This table tracks preparatory basketball training statistics and performance metrics. It connects to employee_training through the training_id field to associate specific training sessions with employee records."""
transaction_names,"""This table maintains a standardized list of transaction type names and their descriptions used across the financial system. It serves as a reference table for categorizing and labeling different types of financial transactions."""
transactions,"""This table records financial transactions and their associated details within the system. It serves as a central reference point for transaction data, connecting to bonus logging activities, community event guest records, and transaction exclusion lists through the transaction_id field."""
transactions_sfids,"""This table stores Salesforce IDs (SFIDs) mapped to transaction records, enabling integration between the local system and Salesforce. It likely serves as a reference table for tracking transaction synchronization between systems."""
transfer_log,"""This table tracks the history of transfers or transactions within the system, recording details such as timestamps, amounts, and status. It serves as an audit log for monitoring and troubleshooting transfer-related activities."""
trial_basket_daily_records,"""This table tracks daily aggregated records of trial basket metrics and performance data. It appears to be a standalone table for monitoring and analyzing trial basket statistics on a day-to-day basis."""
trial_logs,"""This table records detailed logs and events related to system trials or testing sessions. It captures timestamps, actions, results, and other relevant metrics for tracking and analysis purposes."""
uncompletable_logs,"""This table tracks instances where products cannot be completed or fulfilled in the system. It records logs of uncompletable items or processes, linking to the products table through product_id to identify the specific items affected."""
uncustomized_cancel_dates,"""This table stores dates when uncustomized orders were cancelled in the system. Based on the name, it likely tracks cancellation timestamps for standard/non-personalized orders."""
user_agents,"""This table stores browser and device information (user agent strings) from client requests. It helps track and analyze which browsers and devices are accessing the system, useful for compatibility and analytics purposes."""
user_billing,"""This table manages billing and payment information for users, including payment methods, billing addresses, and transaction history. It serves as a central repository for all financial data related to user accounts."""
user_charitable_amount,"""This table tracks charitable contribution amounts made by users on the platform. It connects to the users table through the user_id foreign key, enabling tracking of individual user donations and giving history."""
user_comments,"""This table stores comments and feedback submitted by users across the platform. It maintains a direct relationship with the users table through the user_id foreign key, allowing each comment to be traced back to its author."""
user_comms,"""This table manages user communication preferences and contact history. It likely stores communication channels, opt-in statuses, and message delivery records for users."""
user_coupons,"""This table manages coupon codes assigned to or claimed by users, tracking details like coupon values, expiration dates, and usage status. It likely connects to a users table via user_id and potentially to a coupons master table via coupon_id."""
user_coupons_pending,"""This table tracks pending coupon assignments between referring users and new users who haven't yet claimed their coupons. It serves as a temporary holding area for referral-based coupon rewards, connecting to the coupons table for coupon details and the users table for both referrer and new user information."""
user_home_deliveries,"""This table tracks home delivery details and preferences for users within specific territories. It connects to the ww_territories table through territory_id to determine delivery service areas and regional coverage."""
user_interaction_histories,"""This table tracks historical interactions and activities performed by users within the system. It records timestamps, action types, and relevant details of user engagements, serving as an audit trail for user behavior analysis."""
user_ips,"""This table stores IP addresses associated with user activity or access logs. It likely tracks user locations and helps monitor suspicious behavior or access patterns."""
user_metrics,"""This table tracks various performance and activity metrics associated with users in the system. It stores quantitative data points that measure user behavior, engagement, and usage patterns over time."""
user_notes,"""This table stores personal notes or memos created by users in the system. It likely contains note content, creation timestamps, and user-specific identifiers, though no direct relationships to other tables are currently established."""
user_notification_message_queue,"""This table manages the queue of notification messages waiting to be delivered to specific users. It connects notification_messages to users, tracking which messages need to be sent to which users, acting as a delivery management system for user notifications."""
user_payments,"""This table tracks payment transactions and financial records associated with user accounts. It likely stores payment methods, transaction amounts, timestamps, and payment statuses."""
user_report_subscriptions,"""This table manages user subscriptions to various types of reports or notifications within the system. It tracks which reports users have opted to receive and their subscription preferences."""
user_roles,"""This table manages the association between users and their assigned roles in the system, serving as a junction/mapping table. It connects the users table and roles table through foreign keys (user_id and role_id), enabling many-to-many relationships between users and roles."""
user_session,"""This table tracks user session data including login timestamps, duration, and activity status. It records individual user interactions and sessions for monitoring and analytics purposes."""
user_settings,"""This table stores individual user preferences and configuration settings for the application. It maintains user-specific customizations and default values that control the user's experience within the system."""
user_teams,"""This table manages the association between users and their assigned department teams, serving as a junction/mapping table. It connects users to their respective teams through foreign key relationships with the users and department_teams tables."""
user_tokens,"""This table stores authentication tokens and related security credentials for user sessions. It typically contains token hashes, expiration timestamps, and other session-related data used for maintaining secure user access."""
user_utm_referral,"""This table tracks UTM parameters and referral source information for user acquisitions. It connects to the users table via user_id, enabling analysis of user acquisition channels and marketing campaign effectiveness."""
user_validation_ip_logs,"""This table logs IP addresses and related data for user validation attempts and security monitoring. It tracks authentication events and potential suspicious activities by storing IP addresses, timestamps, and validation outcomes."""
user_waitlist_activation_link,"""This table manages activation links for users on a waitlist system, likely storing unique tokens or URLs that allow waitlisted users to activate their accounts. It appears to be a standalone table focused specifically on managing the waitlist-to-activation process."""
users,"""The users table serves as the central repository for all user account information and authentication details in the system. It is extensively referenced across the application, connecting to numerous tables for tracking user activities, permissions, roles, and interactions. This table is fundamental to the system's user management, employee operations, and customer relationships."""
usersLang,"""This table stores language preferences and settings for users in the system. Based on the name 'usersLang', it likely contains language-specific configurations or localization settings for each user."""
users_excluded_from_reduced_prices_test,"""This table maintains a list of users who are excluded from participating in reduced prices testing or promotions. It serves as a control group or exclusion list for A/B testing related to pricing strategies."""
users_for_reduced_prices_test,"""This table stores test data for users who are eligible for reduced or promotional pricing. It appears to be used for testing pricing-related features or conducting price sensitivity experiments."""
vacations,"""This table stores vacation-related records, likely including details such as dates, destinations, and associated costs. It appears to be a standalone table without direct relationships to other tables in the database."""
vehicle_capacities,"""This table stores capacity measurements and specifications for different vehicles in the system. It connects to the capacity_types table to define what kind of capacity is being measured (such as passenger count, cargo volume, or weight limit). Each record associates a specific vehicle with its corresponding capacity value and type."""
vehicle_skills,"""This table stores specific skills or capabilities associated with different vehicles in the system. It connects to the skill_types table through skill_type_id to categorize and define the nature of each vehicle skill."""
vehicle_time_windows,"""This table manages time windows or scheduling periods associated with vehicles, likely defining when vehicles are available or scheduled for operations. It appears to be a standalone table tracking temporal constraints or availability slots for vehicles."""
video_watched,"""This table tracks videos that users have watched on the platform, recording viewing history and related metrics. It connects to the users table through the user_id foreign key, enabling user-specific video consumption analysis."""
violation_types,"""This table maintains a catalog of different types of violations or infractions that can be recorded in the system. It serves as a reference table for standardizing violation categories and their descriptions."""
violations,"""This table tracks violations or non-compliance incidents that occur during workflow processes. It connects to companies (identifying where the violation occurred), orders (linking violations to specific orders), and workflow steps (indicating at which step the violation was detected)."""
vsl_pup_record,"""This table maintains records of vessel pupillary examinations and measurements. It stores data related to pupil assessments, likely including metrics like size, reactivity, and other clinical observations during vessel-related medical examinations."""
walkthrough_log,"""This table tracks user interactions and progress through guided tutorials or walkthrough sequences. It logs when users complete specific steps or milestones in a walkthrough, helping monitor user engagement and tutorial completion rates."""
warehouse_path,"""This table stores physical navigation paths and routes within warehouse facilities. It likely contains coordinates, path segments, or waypoints that define how people or machines should move through the warehouse space."""
warehouses,"""This table stores information about physical warehouse locations and their operational details. It likely includes data such as warehouse address, capacity, and current inventory levels."""
ww_depots,"""This table stores information about warehouses or storage depots in a logistics/distribution system. It connects to territories through ww_territory_id to define the geographical location of each depot, and links to operational steps through depot_id to track activities or processes associated with each depot."""
ww_drivers,"""This table stores information about delivery drivers in the system, including their personal details and work-related information. It connects to ww_territories table through ww_territory_id to track which geographical area each driver operates in."""
ww_order_comments,"""This table stores comments and notes associated with orders in the system. Based on the 'ww' prefix and name, it likely contains internal or customer-provided comments related to order processing, shipping, or customer service interactions."""
ww_orders,"""This table manages wine warehouse order details, connecting drop instances, base orders, delivery routes, and territory information. It serves as a central hub for tracking wine warehouse specific order processing and delivery logistics. The table links delivery locations (territories) with specific routes and order instances to facilitate warehouse operations and distribution."""
ww_routes,"""This table manages delivery routes for warehouse operations, storing essential route information and planning details. It connects to driver breaks, load basket information, and orders through route_id, while linking to operators (users) and territories for route organization and management."""
ww_steps,"""This table tracks individual steps or checkpoints in a workflow/walkthrough process, connecting to users who perform them and depots where they occur. It enables rating collection and violation tracking for each step through relationships with the ratings and violations tables."""
ww_territories,"""This table stores territory definitions and boundaries for delivery operations. It serves as a central reference point for managing geographical service areas, linking to multiple operational entities including droppoints, drivers, routes, vehicles, and orders. The territories defined here help organize and segment delivery operations across different geographical zones."""
ww_vehicles,"""This table stores vehicle information for a waste/water management system, tracking individual vehicles and their assignments. It connects to daily settings through vehicle_id, links to specific droppoints where vehicles may be reserved, and associates vehicles with territories via ww_territory_id."""
yearly_giveback_log_gift,"""This table tracks gift-related records for yearly giveback or rewards programs. It likely stores details about gifts or rewards distributed during annual customer appreciation or loyalty programs."""
yiiconsole_exec_logs,"""This table logs execution records and outputs from Yii console commands. It tracks command execution history, timestamps, and results for monitoring and debugging purposes."""
zawtar_hd_drivers,"""This table stores information about hardware drivers and their configurations for the Zawtar system. It maintains driver details, compatibility information, and version history for hardware components."""
zipcode_droppoint_log,"""This table logs activities and events related to zip code drop points, likely tracking when and where packages or items are deposited at specific locations. It appears to be a standalone logging table that records operational data about drop point activities by zip code."""
zipcode_region,"""This table maintains a mapping of ZIP codes to their corresponding geographical regions or service areas. It serves as a reference table for the droppoint_zipcode_region table, enabling the association of delivery drop points with specific ZIP code regions."""
zipcodes,"""This table stores geographical ZIP code data including postal codes and their corresponding locations. It serves as a reference table for validating and standardizing postal addresses."""
zzz_20240521_user_id,"""This appears to be a temporary or backup table storing user ID information, created on May 21, 2024 (based on the '20240521' naming pattern). As indicated by the 'zzz_' prefix, it's likely a staging or archival table with no direct relationships to other tables."""
zzz_waitlist_bump_users,"""This table tracks users who have been bumped up or given priority status on a waitlist. It appears to be a standalone table used for managing waitlist prioritization or special handling of specific users."""
